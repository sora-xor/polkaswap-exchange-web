"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[8635],{48635:function(t,s,e){e.r(s),e.d(s,{default:function(){return k}});var i=function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"container transaction-container"},[e("generic-page-header",{attrs:{"has-button-back":"",title:t.t("bridgeTransaction.title")},on:{back:t.handleBack}},[e("s-button",{staticClass:"el-button--history",attrs:{type:"action",icon:"time-time-history-24",tooltip:t.t("bridgeHistory.showHistory"),"tooltip-placement":"bottom-end"},on:{click:t.handleViewTransactionsHistory}})],1),e("div",{staticClass:"transaction-content"},[[e("div",{staticClass:"header"},[e("div",{directives:[{name:"loading",rawName:"v-loading",value:t.isTransactionFromPending||t.isTransactionToPending,expression:"isTransactionFromPending || isTransactionToPending"}],class:t.headerIconClasses}),e("h5",{staticClass:"header-details"},[e("formatted-amount",{staticClass:"info-line-value",attrs:{"value-can-be-hidden":"",value:t.formattedAmount,"asset-symbol":t.assetSymbol}},[e("i",{class:t.firstNetworkIcon})]),e("span",{staticClass:"header-details-separator"},[t._v(t._s(t.t("bridgeTransaction.for")))]),e("formatted-amount",{staticClass:"info-line-value",attrs:{"value-can-be-hidden":"",value:t.formattedAmount,"asset-symbol":t.assetSymbol}},[e("i",{class:t.secondNetworkIcon})])],1),e("p",{staticClass:"header-status"},[t._v(t._s(t.headerStatus))])]),e("s-collapse",{attrs:{borders:"",value:t.activeCollapseItems}},[e("s-collapse-item",{attrs:{name:t.collapseItems.from},scopedSlots:t._u([{key:"title",fn:function(){return[e("div",{staticClass:"network-info-title"},[e("h3",[t._v(" "+t._s(t.t("bridgeTransaction.steps.step",{step:"1"})+" "+t.t("bridgeTransaction.networkTitle",{network:t.formattedNetworkStep1}))+" ")]),e("span",{class:t.firstTxIconStatusClasses})])]},proxy:!0}])},[t.transactionFromHash?e("div",{class:t.firstTxHashContainerClasses},[e("s-input",{attrs:{placeholder:t.t("bridgeTransaction.transactionHash"),value:t.firstTxHash,readonly:""}}),e("s-button",{staticClass:"s-button--hash-copy",attrs:{type:"action",alternative:"",icon:"basic-copy-24",tooltip:t.copyTransactionHashTooltip},on:{click:function(s){return t.handleCopyAddress(t.transactionFromHash,s)}}}),t.isSoraToEvm&&t.soraExpolrerLinks.length||!t.isSoraToEvm?e("s-dropdown",{staticClass:"s-dropdown--hash-menu",attrs:{borderRadius:"mini",type:"ellipsis",icon:"basic-more-vertical-24",placement:"bottom-end"},on:{select:function(s){t.isSoraToEvm||t.handleOpenEtherscan()}}},[e("template",{slot:"menu"},[t.isSoraToEvm?t._l(t.soraExpolrerLinks,(function(s){return e("a",{key:s.type,staticClass:"transaction-link",attrs:{href:s.value,target:"_blank",rel:"nofollow noopener"}},[e("s-dropdown-item",{staticClass:"s-dropdown-menu__item",attrs:{disabled:!(t.soraTxId||t.soraTxBlockId)}},[t._v(" "+t._s(t.t("transaction.viewIn."+s.type))+" ")])],1)})):e("s-dropdown-item",{staticClass:"s-dropdown-menu__item"},[e("span",[t._v(t._s(t.t("bridgeTransaction.viewInEtherscan")))])])],2)],2):t._e()],1):t._e(),e("info-line",{class:t.failedClassStep1,attrs:{label:t.t("bridgeTransaction.networkInfo.status"),value:t.statusFrom}}),e("info-line",{attrs:{label:t.t("bridgeTransaction.networkInfo.date"),value:t.transactionFromDate}}),t.amount?e("info-line",{attrs:{"is-formatted":"","value-can-be-hidden":"",label:t.t("bridgeTransaction.networkInfo.amount"),value:"-"+t.formattedAmount,"asset-symbol":t.assetSymbol,"fiat-value":t.firstAmountFiatValue}}):t._e(),e("info-line",{attrs:{"is-formatted":"",label:t.t("bridgeTransaction.networkInfo.transactionFee"),value:t.isSoraToEvm?t.formattedSoraNetworkFee:t.formattedEvmNetworkFee,"asset-symbol":t.isSoraToEvm?t.KnownSymbols.XOR:t.evmTokenSymbol,"fiat-value":t.soraFeeFiatValue},scopedSlots:t._u([!t.isSoraToEvm&&t.formattedEvmNetworkFee?{key:"info-line-value-prefix",fn:function(){return[e("span",{staticClass:"info-line-value-prefix"},[t._v("~")])]},proxy:!0}:null],null,!0)}),t.isTransactionFromCompleted?t._e():e("s-button",{staticClass:"s-typograhy-button--big",attrs:{type:"primary",disabled:t.isFirstConfirmationButtonDisabled},on:{click:function(s){return t.handleTransaction()}}},[t.isTransactionFromPending?e("span",{domProps:{innerHTML:t._s(t.t("bridgeTransaction.pending",{network:t.t("bridgeTransaction."+(t.isSoraToEvm?"sora":"ethereum"))}))}}):t.isSoraToEvm||t.isExternalAccountConnected?t.isSoraToEvm||t.isValidNetworkType?t.isInsufficientBalance?[t._v(t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.assetSymbol})))]:t.isInsufficientXorForFee?[t._v(t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.KnownSymbols.XOR})))]:t.isInsufficientEvmNativeTokenForFee?[t._v(t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.evmTokenSymbol})))]:t.isTransactionFromFailed?[t._v(t._s(t.t("bridgeTransaction.retry")))]:t.txWaitingForApprove?[t._v(t._s(t.t("bridgeTransaction.allowToken",{tokenSymbol:t.assetSymbol})))]:[t._v(t._s(t.t("bridgeTransaction.confirm",{direction:t.t("bridgeTransaction."+(t.isSoraToEvm?"sora":"metamask"))})))]:[t._v(t._s(t.t("bridgeTransaction.changeNetwork")))]:[t._v(t._s(t.t("bridgeTransaction.connectWallet")))]],2),t.txWaitingForApprove?e("div",{staticClass:"transaction-approval-text"},[t._v(" "+t._s(t.t("bridgeTransaction.approveToken"))+" ")]):t._e()],1),e("s-collapse-item",{attrs:{name:t.collapseItems.to},scopedSlots:t._u([{key:"title",fn:function(){return[e("div",{staticClass:"network-info-title"},[e("h3",[t._v(" "+t._s(t.t("bridgeTransaction.steps.step",{step:"2"})+" "+t.t("bridgeTransaction.networkTitle",{network:t.formattedNetworkStep2}))+" ")]),t.isTransactionFromCompleted?e("span",{class:t.secondTxIconStatusClasses}):t._e()])]},proxy:!0}])},[!t.isSoraToEvm||t.isTxEvmAccount||t.isTransactionToCompleted?t._e():e("div",{staticClass:"transaction-error"},[e("span",{staticClass:"transaction-error__title"},[t._v(t._s(t.t("bridgeTransaction.expectedMetaMaskAddress")))]),e("span",{staticClass:"transaction-error__value"},[t._v(t._s(t.transactionEvmAddress))])]),t.isTransactionFromCompleted&&t.transactionToHash?e("div",{class:t.secondTxHashContainerClasses},[e("s-input",{attrs:{placeholder:t.t("bridgeTransaction.transactionHash"),value:t.secondTxHash,readonly:""}}),e("s-button",{staticClass:"s-button--hash-copy",attrs:{type:"action",alternative:"",icon:"basic-copy-24",tooltip:t.copyTransactionHashTooltip},on:{click:function(s){return t.handleCopyAddress(t.transactionToHash,s)}}}),!t.isSoraToEvm&&t.soraExpolrerLinks.length||t.isSoraToEvm?e("s-dropdown",{staticClass:"s-dropdown--hash-menu",attrs:{borderRadius:"mini",type:"ellipsis",icon:"basic-more-vertical-24",placement:"bottom-end"},on:{select:function(s){t.isSoraToEvm&&t.handleOpenEtherscan()}}},[e("template",{slot:"menu"},[t.isSoraToEvm?e("s-dropdown-item",{staticClass:"s-dropdown-menu__item"},[e("span",[t._v(t._s(t.t("bridgeTransaction.viewInEtherscan")))])]):t._l(t.soraExpolrerLinks,(function(s){return e("a",{key:s.type,staticClass:"transaction-link",attrs:{href:s.value,target:"_blank",rel:"nofollow noopener"}},[e("s-dropdown-item",{staticClass:"s-dropdown-menu__item",attrs:{disabled:!(t.soraTxId||t.soraTxBlockId)}},[t._v(" "+t._s(t.t("transaction.viewIn."+s.type))+" ")])],1)}))],2)],2):t._e()],1):t._e(),e("info-line",{class:t.failedClassStep2,attrs:{label:t.t("bridgeTransaction.networkInfo.status"),value:t.statusTo}}),e("info-line",{attrs:{label:t.t("bridgeTransaction.networkInfo.date"),value:t.transactionToDate}}),t.amount?e("info-line",{attrs:{"is-formatted":"","value-can-be-hidden":"",label:t.t("bridgeTransaction.networkInfo.amount"),value:t.formattedAmount,"asset-symbol":t.assetSymbol,"fiat-value":t.secondAmountFiatValue}}):t._e(),e("info-line",{attrs:{label:t.t("bridgeTransaction.networkInfo.transactionFee"),value:t.isSoraToEvm?t.formattedEvmNetworkFee:t.formattedSoraNetworkFee,"asset-symbol":t.isSoraToEvm?t.evmTokenSymbol:t.KnownSymbols.XOR,"fiat-value":t.soraNetworkFeeFiatValue,"is-formatted":""},scopedSlots:t._u([t.isSoraToEvm&&t.formattedEvmNetworkFee?{key:"info-line-value-prefix",fn:function(){return[e("span",{staticClass:"info-line-value-prefix"},[t._v("~")])]},proxy:!0}:null],null,!0)}),t.isTransactionFromCompleted&&!t.isTransactionToCompleted?e("s-button",{staticClass:"s-typograhy-button--big",attrs:{type:"primary",disabled:t.isSecondConfirmationButtonDisabled},on:{click:function(s){return t.handleTransaction()}}},[t.isSoraToEvm&&!t.isExternalAccountConnected?[t._v(t._s(t.t("bridgeTransaction.connectWallet")))]:t.isSoraToEvm&&!t.isTxEvmAccount?[t._v(t._s(t.t("bridgeTransaction.changeAccount")))]:t.isSoraToEvm&&!t.isValidNetworkType?[t._v(t._s(t.t("bridgeTransaction.changeNetwork")))]:t.comfirmationBlocksLeft?[t._v(" "+t._s(t.t("bridgeTransaction.blocksLeft",{count:t.comfirmationBlocksLeft}))+" ")]:t.isTransactionToPending?e("span",{domProps:{innerHTML:t._s(t.t("bridgeTransaction.pending",{network:t.t("bridgeTransaction."+(t.isSoraToEvm?"ethereum":"sora"))}))}}):(t.isSoraToEvm?t.isInsufficientEvmNativeTokenForFee:t.isInsufficientXorForFee)?[t._v(t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.isSoraToEvm?t.evmTokenSymbol:t.KnownSymbols.XOR})))]:t.isTransactionToFailed?[t._v(t._s(t.t("bridgeTransaction.retry")))]:[t._v(t._s(t.t("bridgeTransaction.confirm",{direction:t.t("bridgeTransaction."+(t.isSoraToEvm?"metamask":"sora"))})))]],2):t._e()],1)],1)]],2),t.isTransactionToCompleted?e("s-button",{staticClass:"s-typography-button--large",attrs:{type:"secondary"},on:{click:t.navigateToBridge}},[t._v(" "+t._s(t.t("bridgeTransaction.newTransaction"))+" ")]):t._e()],1)},o=[],a=e(34563),n=e(70655),r=e(53545),c=e(8638),l=e(82753),d=e(63280),h=e(41468),m=e(80710),u=e(16546),T=e(74614),p=e(85530),g=e(28335);const v=24;let f=class extends((0,r.Wr)(c.tA.FormattedAmountMixin,c.tA.CopyAddressMixin,d.Z,h.Z)){constructor(...t){super(...t),(0,a.Z)(this,"KnownSymbols",l.KnownSymbols),(0,a.Z)(this,"collapseItems",{from:"step-from",to:"step-to"}),(0,a.Z)(this,"waitingForApprove",void 0),(0,a.Z)(this,"inProgressIds",void 0),(0,a.Z)(this,"prevRoute",void 0),(0,a.Z)(this,"getAsset",void 0),(0,a.Z)(this,"historyItem",void 0),(0,a.Z)(this,"isTxEvmAccount",void 0),(0,a.Z)(this,"setHistory",void 0),(0,a.Z)(this,"setHistoryId",void 0),(0,a.Z)(this,"handleBridgeTx",void 0)}get txInProcess(){return!!this.historyItem?.id&&this.historyItem.id in this.inProgressIds}get txWaitingForApprove(){return!!this.historyItem?.id&&this.historyItem.id in this.waitingForApprove}get amount(){return this.historyItem?.amount??""}get asset(){return this.historyItem?.assetAddress?this.getAsset(this.historyItem.assetAddress):null}get isSoraToEvm(){return(0,g.mW)(this.historyItem)}get formattedAmount(){return this.amount&&this.asset?this.formatStringValue(this.amount,this.asset.decimals):""}get assetSymbol(){return this.asset?.symbol??""}get evmIcon(){return this.getEvmIcon(this.historyItem?.externalNetwork)}get txSoraNetworkFee(){return this.historyItem?.soraNetworkFee??this.soraNetworkFee}get txEvmNetworkFee(){return this.historyItem?.ethereumNetworkFee??this.evmNetworkFee}get transactionFromHash(){return(this.isSoraToEvm?this.historyItem?.hash:this.historyItem?.ethereumHash)??""}get transactionToHash(){return(this.isSoraToEvm?this.historyItem?.ethereumHash:this.historyItem?.hash)??""}get transactionFromDate(){return this.formatTransactionDate(this.historyItem?.startTime)}get transactionToDate(){return this.formatTransactionDate(this.historyItem?.endTime)}get soraFeeFiatValue(){return this.isSoraToEvm?this.getFiatAmountByCodecString(this.txSoraNetworkFee):null}get firstAmountFiatValue(){return this.isSoraToEvm&&this.asset?this.getFiatAmountByString(this.amount,this.asset):null}get secondAmountFiatValue(){return!this.isSoraToEvm&&this.asset?this.getFiatAmountByString(this.amount,this.asset):null}get currentState(){return this.historyItem?.transactionState??g.PO.INITIAL}get isTransferStarted(){return this.currentState!==g.PO.INITIAL}get isTransactionFromPending(){return this.currentState===(this.isSoraToEvm?g.PO.SORA_PENDING:g.PO.EVM_PENDING)}get isTransactionToPending(){return this.currentState===(this.isSoraToEvm?g.PO.EVM_PENDING:g.PO.SORA_PENDING)}get isTransactionFromFailed(){return this.currentState===(this.isSoraToEvm?g.PO.SORA_REJECTED:g.PO.EVM_REJECTED)}get isTransactionToFailed(){return this.currentState===(this.isSoraToEvm?g.PO.EVM_REJECTED:g.PO.SORA_REJECTED)}get isTransactionFromCompleted(){return this.isTransferStarted&&!this.isTransactionFromPending&&!this.isTransactionFromFailed}get isTransactionToCompleted(){return this.currentState===(this.isSoraToEvm?g.PO.EVM_COMMITED:g.PO.SORA_COMMITED)}get transactionStep(){return this.historyItem?.transactionStep??1}get copyTransactionHashTooltip(){return this.copyTooltip(this.t("bridgeTransaction.transactionHash"))}get activeCollapseItems(){return this.isTransactionToCompleted?[]:this.isTransactionFromCompleted?[this.collapseItems.to]:[this.collapseItems.from,this.collapseItems.to]}get headerIconClasses(){const t="header-icon",s=[t];return this.isTransactionFromFailed||this.isTransactionToFailed?s.push(`${t}--error`):this.isTransactionToCompleted?s.push(`${t}--success`):this.isTransactionFromCompleted&&s.push(`${t}--wait`),s.join(" ")}get headerStatus(){const t={step:this.t("bridgeTransaction.steps.step",{step:this.t(`bridgeTransaction.steps.step${this.transactionStep}`)})};return this.isTransactionFromPending||this.isTransactionToPending?this.t("bridgeTransaction.status.pending",t):this.isTransactionFromFailed||this.isTransactionToFailed?this.t("bridgeTransaction.status.failed",t):this.isTransactionToCompleted?this.t("bridgeTransaction.status.convertionComplete"):this.t("bridgeTransaction.status.confirm")}get statusFrom(){return this.isTransactionFromPending?this.isSoraToEvm||this.transactionFromHash?this.t("bridgeTransaction.statuses.pending")+"...":this.t("bridgeTransaction.statuses.waitingForConfirmation"):this.isTransactionFromFailed?this.t("bridgeTransaction.statuses.failed"):this.isTransactionFromCompleted?this.t("bridgeTransaction.statuses.done"):this.t("bridgeTransaction.statuses.waiting")+"..."}get statusTo(){return this.isTransactionToPending?this.isSoraToEvm&&!this.transactionToHash?this.t("bridgeTransaction.statuses.waitingForConfirmation"):this.t("bridgeTransaction.statuses.pending")+"...":this.isTransactionToFailed?this.t("bridgeTransaction.statuses.failed"):this.isTransactionToCompleted?this.t("bridgeTransaction.statuses.done"):this.t("bridgeTransaction.statuses.waiting")+"..."}get transactionEvmAddress(){return this.historyItem?.to??""}get soraTxId(){return this.historyItem?.id?this.historyItem.txId:null}get soraTxBlockId(){return this.historyItem?.id?this.historyItem.blockId:null}get formattedSoraNetworkFee(){return this.getStringFromCodec(this.txSoraNetworkFee,this.xor.decimals)}get soraNetworkFeeFiatValue(){return this.isSoraToEvm?null:this.getFiatAmountByCodecString(this.txSoraNetworkFee)}get formattedEvmNetworkFee(){return this.formatCodecNumber(this.txEvmNetworkFee)}get isInsufficientBalance(){const t=this.isSoraToEvm?this.txSoraNetworkFee:this.txEvmNetworkFee;return!!(this.asset&&this.amount&&t)&&(0,p.Vl)(this.asset,this.amount,t,!this.isSoraToEvm)}get isInsufficientXorForFee(){return(0,p.LG)(this.xor,this.txSoraNetworkFee)}get isInsufficientEvmNativeTokenForFee(){return(0,p.lV)(this.evmBalance,this.txEvmNetworkFee)}get isFirstConfirmationButtonDisabled(){return!(this.isSoraToEvm||this.isValidNetworkType)||!this.isTransferStarted||this.isInsufficientBalance||this.isInsufficientXorForFee||this.isInsufficientEvmNativeTokenForFee||this.isTransactionFromPending}get isSecondConfirmationButtonDisabled(){return this.isSoraToEvm&&!(this.isValidNetworkType&&this.isTxEvmAccount)||(this.isSoraToEvm?this.isInsufficientEvmNativeTokenForFee:this.isInsufficientXorForFee)||this.isTransactionToPending}get firstNetworkIcon(){return`s-icon--network s-icon-${this.isSoraToEvm?"sora":this.evmIcon}`}get secondNetworkIcon(){return`s-icon--network s-icon-${this.isSoraToEvm?this.evmIcon:"sora"}`}handleOpenEtherscan(){const t=this.isSoraToEvm?this.transactionToHash:this.transactionFromHash,s=this.getEtherscanLink(t,!0),e=window.open(s,"_blank");e&&e.focus()}get soraExpolrerLinks(){if(!this.soraNetwork)return[];const t=(0,c.$_)(this.soraNetwork),s=this.soraTxId||this.soraTxBlockId;return s?this.soraTxId?t.map((({type:t,value:e})=>{const i={type:t};return t===c.it.ExplorerType.Sorascan?i.value=`${e}/transaction/${s}`:i.value=`${e}/extrinsic/${s}`,i})):t.map((({type:t,value:e})=>({type:t,value:`${e}/block/${s}`}))):[]}get firstTxHash(){return this.formatAddress(this.transactionFromHash,v)}get secondTxHash(){return this.formatAddress(this.transactionToHash,v)}handleViewTransactionsHistory(){m.ZP.push({name:u.sn.BridgeTransactionsHistory})}navigateToBridge(){m.ZP.push({name:u.sn.Bridge})}async created(){this.historyItem?await this.withParentLoading((async()=>{const t=!this.txInProcess&&(!this.isTransferStarted||this.isTransactionFromPending||this.isTransactionToPending);await this.handleTransaction(t)})):this.navigateToBridge()}beforeDestroy(){if(this.historyItem){const t={...this.historyItem};t.id&&!this.txInProcess&&(0,g.gR)(t)&&(g.Zc.removeHistory(t.id),this.setHistory())}this.setHistoryId()}getTxIconStatusClasses(t){const s="network-info-icon",e=[s],i=t?this.isTransactionToFailed:this.isTransactionFromFailed,o=t?this.isTransactionToCompleted:this.isTransactionFromCompleted;return i?e.push(`${s}--error`):o?e.push(`${s}--success`):e.push(`${s}--pending`),e.join(" ")}get firstTxIconStatusClasses(){return this.getTxIconStatusClasses()}get secondTxIconStatusClasses(){return this.getTxIconStatusClasses(!0)}getHashContainerClasses(t=!0){const s="transaction-hash-container",e=[s];return t&&e.push(`${s}--with-dropdown`),e.join(" ")}get firstTxHashContainerClasses(){return this.getHashContainerClasses()}get secondTxHashContainerClasses(){return this.getHashContainerClasses()}get formattedNetworkStep1(){return this.t(this.formatNetwork(this.isSoraToEvm,!0))}get formattedNetworkStep2(){return this.t(this.formatNetwork(!this.isSoraToEvm,!0))}get comfirmationBlocksLeft(){if(this.isSoraToEvm||!this.isTransactionToPending||!this.historyItem?.blockHeight||!this.evmBlockNumber)return 0;const t=+this.historyItem.blockHeight+30-this.evmBlockNumber;return Math.max(t,0)}get failedClassStep1(){return this.getFailedClass(this.isTransactionFromFailed)}get failedClassStep2(){return this.getFailedClass(this.isTransactionToFailed)}getFailedClass(t){return t?"info-line--error":""}formatTransactionDate(t){const s=t?new Date(t):new Date;return this.formatDate(s.getTime())}async handleTransaction(t=!0){await this.checkConnectionToExternalAccount((async()=>{t&&this.historyItem?.id&&await this.handleBridgeTx(this.historyItem.id)}))}handleBack(){m.ZP.push({name:this.prevRoute})}};(0,n.__decorate)([T.SB.bridge.waitingForApprove],f.prototype,"waitingForApprove",void 0),(0,n.__decorate)([T.SB.bridge.inProgressIds],f.prototype,"inProgressIds",void 0),(0,n.__decorate)([T.SB.router.prev],f.prototype,"prevRoute",void 0),(0,n.__decorate)([T.Yn.assets.assetDataByAddress],f.prototype,"getAsset",void 0),(0,n.__decorate)([T.Yn.bridge.historyItem],f.prototype,"historyItem",void 0),(0,n.__decorate)([T.Yn.bridge.isTxEvmAccount],f.prototype,"isTxEvmAccount",void 0),(0,n.__decorate)([T.QF.bridge.setHistory],f.prototype,"setHistory",void 0),(0,n.__decorate)([T.QF.bridge.setHistoryId],f.prototype,"setHistoryId",void 0),(0,n.__decorate)([T.aD.bridge.handleBridgeTx],f.prototype,"handleBridgeTx",void 0),f=(0,n.__decorate)([(0,r.wA)({components:{GenericPageHeader:(0,m.kF)(u.z8.GenericPageHeader),ConfirmBridgeTransactionDialog:(0,m.kF)(u.z8.ConfirmBridgeTransactionDialog),FormattedAmount:c.wx.FormattedAmount,InfoLine:c.wx.InfoLine}})],f);var b=f,y=b,S=e(1001),F=(0,S.Z)(y,i,o,!1,null,"f3ada680",null),k=F.exports}}]);