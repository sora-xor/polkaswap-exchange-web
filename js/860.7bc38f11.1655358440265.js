"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[860],{20860:function(t,e,s){s.r(e),s.d(e,{default:function(){return y}});var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"bridge s-flex"},[s("s-form",{staticClass:"bridge-form el-form--actions",attrs:{"show-message":!1}},[s("s-card",{directives:[{name:"loading",rawName:"v-loading",value:t.parentLoading,expression:"parentLoading"}],staticClass:"bridge-content",attrs:{"border-radius":"medium",shadow:"always",size:"big",primary:""}},[s("generic-page-header",{staticClass:"header--bridge",attrs:{title:t.t("bridge.title"),tooltip:t.t("bridge.info")}},[t.areNetworksConnected?s("s-button",{staticClass:"el-button--history",attrs:{type:"action",icon:"time-time-history-24",tooltip:t.t("bridgeHistory.showHistory"),"tooltip-placement":"bottom-end"},on:{click:t.handleViewTransactionsHistory}}):t._e()],1),s("s-float-input",{staticClass:"s-input--token-value",attrs:{value:t.amount,decimals:t.getDecimals(t.isSoraToEvm),delimiters:t.delimiters,max:t.getMax(t.assetAddress),disabled:!t.areNetworksConnected||!t.isAssetSelected,"has-locale-string":"",size:"medium"},on:{input:t.setAmount},scopedSlots:t._u([{key:"bottom",fn:function(){return[s("div",{staticClass:"input-line input-line--footer"},[t.asset&&t.isSoraToEvm?s("formatted-amount",{attrs:{"is-fiat-value":"",value:t.getFiatAmountByString(t.amount,t.asset)}}):t._e(),t.isAssetSelected?s("token-address",t._b({staticClass:"input-value",attrs:{external:!t.isSoraToEvm}},"token-address",t.asset,!1)):t._e()],1),t.isNetworkAConnected?s("div",{staticClass:"bridge-item-footer"},[s("s-divider",{attrs:{type:"tertiary"}}),s("s-tooltip",{attrs:{content:t.getCopyTooltip(t.isSoraToEvm),"border-radius":"mini",placement:"bottom-end"}},[s("span",{staticClass:"bridge-network-address",on:{click:function(e){return t.handleCopyAddress(t.accountAddressFrom,e)}}},[t._v(" "+t._s(t.formatAddress(t.accountAddressFrom,8))+" ")])]),s("span",[t._v(t._s(t.t("bridge.connected")))])],1):s("s-button",{staticClass:"el-button--connect s-typography-button--large",attrs:{type:"primary"},on:{click:function(e){t.isSoraToEvm?t.connectInternalWallet():t.connectExternalWallet()}}},[t._v(" "+t._s(t.t("bridge.connectWallet"))+" ")])]},proxy:!0}])},[s("div",{staticClass:"input-line",attrs:{slot:"top"},slot:"top"},[s("div",{staticClass:"input-title"},[s("span",{staticClass:"input-title--uppercase input-title--primary"},[t._v(t._s(t.t("transfers.from")))]),s("span",{staticClass:"input-title--network"},[t._v(t._s(t.getBridgeItemTitle(t.isSoraToEvm)))]),s("i",{class:"s-icon-"+(t.isSoraToEvm?"sora":t.getEvmIcon(t.evmNetwork))})]),t.isNetworkAConnected&&t.isAssetSelected?s("div",{staticClass:"input-value"},[s("span",{staticClass:"input-value--uppercase"},[t._v(t._s(t.t("bridge.balance")))]),s("formatted-amount-with-fiat-value",{attrs:{"value-can-be-hidden":"","with-left-shift":"","value-class":"input-value--primary",value:t.formatBalance(t.isSoraToEvm),"fiat-value":t.firstFieldFiatBalance}})],1):t._e()]),t.isNetworkAConnected?s("div",{staticClass:"s-flex el-buttons",attrs:{slot:"right"},slot:"right"},[t.isMaxAvailable?s("s-button",{staticClass:"el-button--max s-typography-button--small",attrs:{type:"primary",alternative:"",size:"mini","border-radius":"mini"},on:{click:t.handleMaxValue}},[t._v(" "+t._s(t.t("buttons.max"))+" ")]):t._e(),s("token-select-button",{staticClass:"el-button--select-token",attrs:{icon:"chevron-down-rounded-16",token:t.asset},on:{click:t.openSelectAssetDialog}})],1):t._e()]),s("s-button",{staticClass:"s-button--switch",attrs:{type:"action",icon:"arrows-swap-90-24"},on:{click:t.handleSwitchItems}}),s("s-float-input",{staticClass:"s-input--token-value",attrs:{value:t.amount,decimals:t.getDecimals(!t.isSoraToEvm),delimiters:t.delimiters,max:t.getMax(t.assetAddress),"has-locale-string":"",size:"medium",disabled:""},scopedSlots:t._u([{key:"bottom",fn:function(){return[s("div",{staticClass:"input-line input-line--footer"},[t.asset&&!t.isSoraToEvm?s("formatted-amount",{attrs:{value:t.getFiatAmountByString(t.amount,t.asset),"is-fiat-value":""}}):t._e(),t.isAssetSelected?s("token-address",t._b({staticClass:"input-value",attrs:{external:t.isSoraToEvm}},"token-address",t.asset,!1)):t._e()],1),t.isNetworkBConnected?s("div",{staticClass:"bridge-item-footer"},[s("s-divider",{attrs:{type:"tertiary"}}),s("s-tooltip",{attrs:{content:t.getCopyTooltip(!t.isSoraToEvm),"border-radius":"mini",placement:"bottom-end"}},[s("span",{staticClass:"bridge-network-address",on:{click:function(e){return t.handleCopyAddress(t.accountAddressTo,e)}}},[t._v(" "+t._s(t.formatAddress(t.accountAddressTo,8))+" ")])]),s("span",[t._v(t._s(t.t("bridge.connected")))])],1):s("s-button",{staticClass:"el-button--connect s-typography-button--large",attrs:{type:"primary"},on:{click:function(e){t.isSoraToEvm?t.connectExternalWallet():t.connectInternalWallet()}}},[t._v(" "+t._s(t.t("bridge.connectWallet"))+" ")])]},proxy:!0}])},[s("div",{staticClass:"input-line",attrs:{slot:"top"},slot:"top"},[s("div",{staticClass:"input-title",on:{click:t.handleChangeNetwork}},[s("span",{staticClass:"input-title--uppercase input-title--primary"},[t._v(t._s(t.t("transfers.to")))]),s("span",{staticClass:"input-title--network"},[t._v(t._s(t.getBridgeItemTitle(!t.isSoraToEvm)))]),s("i",{class:"s-icon-"+(t.isSoraToEvm?t.getEvmIcon(t.evmNetwork):"sora")})]),t.isNetworkAConnected&&t.isAssetSelected?s("div",{staticClass:"input-value"},[s("span",{staticClass:"input-value--uppercase"},[t._v(t._s(t.t("bridge.balance")))]),s("formatted-amount-with-fiat-value",{attrs:{"value-can-be-hidden":"","with-left-shift":"","value-class":"input-value--primary",value:t.formatBalance(!t.isSoraToEvm),"fiat-value":t.secondFieldFiatBalance}})],1):t._e()]),t.isNetworkAConnected&&t.isAssetSelected?s("div",{staticClass:"s-flex el-buttons",attrs:{slot:"right"},slot:"right"},[s("token-select-button",{staticClass:"el-button--select-token",attrs:{token:t.asset}})],1):t._e()]),s("s-button",{staticClass:"el-button--next s-typography-button--large",attrs:{type:"primary",disabled:t.isConfirmTxDisabled,loading:t.isSelectAssetLoading},on:{click:t.handleConfirmTransaction}},[t.isAssetSelected?t.isRegisteredAsset?t.areNetworksConnected?t.isValidNetworkType?t.isZeroAmount?[t._v(" "+t._s(t.t("buttons.enterAmount"))+" ")]:t.isInsufficientBalance?[t._v(" "+t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.assetSymbol}))+" ")]:t.isInsufficientXorForFee?[t._v(" "+t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.KnownSymbols.XOR}))+" ")]:t.isInsufficientEvmNativeTokenForFee?[t._v(" "+t._s(t.t("confirmBridgeTransactionDialog.insufficientBalance",{tokenSymbol:t.evmTokenSymbol}))+" ")]:[t._v(" "+t._s(t.t("bridge.next"))+" ")]:[t._v(" "+t._s(t.t("bridge.changeNetwork"))+" ")]:[t._v(" "+t._s(t.t("bridge.next"))+" ")]:[t._v(" "+t._s(t.t("bridge.notRegisteredAsset",{assetSymbol:t.assetSymbol}))+" ")]:[t._v(" "+t._s(t.t("buttons.chooseAToken"))+" ")]],2),t.areNetworksConnected&&!t.isZeroAmount&&t.isRegisteredAsset?s("bridge-transaction-details",{staticClass:"info-line-container",attrs:{"info-only":!1,"evm-token-symbol":t.evmTokenSymbol,"evm-network-fee":t.evmNetworkFee,"sora-network-fee":t.soraNetworkFee}}):t._e()],1),s("select-registered-asset",{attrs:{visible:t.showSelectTokenDialog,asset:t.asset},on:{"update:visible":function(e){t.showSelectTokenDialog=e},select:t.selectAsset}}),s("confirm-bridge-transaction-dialog",{attrs:{visible:t.showConfirmTransactionDialog,"is-valid-network-type":t.isValidNetworkType,"is-sora-to-evm":t.isSoraToEvm,"is-insufficient-balance":t.isInsufficientBalance,asset:t.asset,amount:t.amount,"evm-token-symbol":t.evmTokenSymbol,"evm-network":t.evmNetwork,"evm-network-fee":t.evmNetworkFee,"sora-network-fee":t.soraNetworkFee},on:{"update:visible":function(e){t.showConfirmTransactionDialog=e},confirm:t.confirmTransaction}}),s("network-fee-warning-dialog",{attrs:{visible:t.showWarningFeeDialog,fee:t.formattedSoraNetworkFee},on:{"update:visible":function(e){t.showWarningFeeDialog=e},confirm:t.confirmNetworkFeeWariningDialog}})],1),t.areNetworksConnected?t._e():s("div",{staticClass:"bridge-footer"},[t._v(t._s(t.t("bridge.connectWallets")))])],1)},o=[],a=s(34563),r=s(70655),n=s(53545),c=s(8638),d=s(36930),l=s(82753),u=s(63280),m=s(41468),h=s(2591),g=s(91487),v=s(74614),p=s(80710),b=s(16546),f=s(85530);let k=class extends((0,n.Wr)(c.tA.FormattedAmountMixin,c.tA.NetworkFeeWarningMixin,c.tA.CopyAddressMixin,u.Z,m.Z,h.Z,g.Z)){constructor(...t){super(...t),(0,a.Z)(this,"delimiters",d.FPNumber.DELIMITERS_CONFIG),(0,a.Z)(this,"KnownSymbols",l.KnownSymbols),(0,a.Z)(this,"evmNetworkFeeFetching",void 0),(0,a.Z)(this,"subNetworks",void 0),(0,a.Z)(this,"amount",void 0),(0,a.Z)(this,"isSoraToEvm",void 0),(0,a.Z)(this,"asset",void 0),(0,a.Z)(this,"isRegisteredAsset",void 0),(0,a.Z)(this,"nodeIsConnected",void 0),(0,a.Z)(this,"setSoraToEvm",void 0),(0,a.Z)(this,"setHistoryId",void 0),(0,a.Z)(this,"setAmount",void 0),(0,a.Z)(this,"setAssetAddress",void 0),(0,a.Z)(this,"resetBridgeForm",void 0),(0,a.Z)(this,"resetBalanceSubscription",void 0),(0,a.Z)(this,"updateBalanceSubscription",void 0),(0,a.Z)(this,"getEvmNetworkFee",void 0),(0,a.Z)(this,"generateHistoryItem",void 0),(0,a.Z)(this,"addAssetToAccountAssets",void 0),(0,a.Z)(this,"showSelectTokenDialog",!1),(0,a.Z)(this,"showSelectNetworkDialog",!1),(0,a.Z)(this,"showConfirmTransactionDialog",!1)}updateConnectionSubsriptions(t){t?this.updateBalanceSubscription():this.resetBalanceSubscription()}get assetAddress(){return this.asset?this.asset.address:""}get firstFieldFiatBalance(){return this.isSoraToEvm?this.getFiatBalance(this.asset):void 0}get secondFieldFiatBalance(){return this.isSoraToEvm?void 0:this.getFiatBalance(this.asset)}get isNetworkAConnected(){return this.isSoraToEvm?this.isSoraAccountConnected:this.isExternalAccountConnected}get isNetworkBConnected(){return this.isSoraToEvm?this.isExternalAccountConnected:this.isSoraAccountConnected}get isZeroAmount(){return 0===+this.amount}get isMaxAvailable(){if(!this.areNetworksConnected||!this.isRegisteredAsset||!this.asset)return!1;const t=(0,f.rh)(this.asset,{internal:this.isSoraToEvm});if((0,f.yA)(t))return!1;const e=this.asset.decimals,s=this.getFPNumberFromCodec(t,e),i=this.getFPNumber(this.amount,e);if((0,f.AN)(this.asset)&&this.isSoraToEvm){const t=this.getFPNumberFromCodec(this.soraNetworkFee,e);return!d.FPNumber.eq(t,s.sub(i))&&d.FPNumber.gt(s,t)}if((0,f.uc)(this.asset.externalAddress)&&!this.isSoraToEvm){const t=this.getFPNumberFromCodec(this.evmNetworkFee);return!d.FPNumber.eq(t,s.sub(i))&&d.FPNumber.gt(s,t)}return!d.FPNumber.eq(s,i)}get isInsufficientXorForFee(){return(0,f.LG)(this.xor,this.soraNetworkFee)}get isInsufficientEvmNativeTokenForFee(){return(0,f.lV)(this.evmBalance,this.evmNetworkFee)}get isInsufficientBalance(){if(!this.asset)return!1;const t=this.isSoraToEvm?this.soraNetworkFee:this.evmNetworkFee;return this.isNetworkAConnected&&this.isRegisteredAsset&&(0,f.Vl)(this.asset,this.amount,t,!this.isSoraToEvm)}get isAssetSelected(){return!!this.asset}get assetSymbol(){return this.asset?.symbol??""}get formattedSoraNetworkFee(){return this.formatCodecNumber(this.soraNetworkFee)}get isConfirmTxDisabled(){return!this.isAssetSelected||!this.areNetworksConnected||!this.isValidNetworkType||!this.isAssetSelected||this.isZeroAmount||this.isInsufficientXorForFee||this.isInsufficientEvmNativeTokenForFee||this.isInsufficientBalance||!this.isRegisteredAsset||this.evmNetworkFeeFetching}get isXorSufficientForNextOperation(){return!!this.asset&&this.isXorSufficientForNextTx({type:this.isSoraToEvm?d.Operation.EthBridgeOutgoing:d.Operation.EthBridgeIncoming,isXorAccountAsset:(0,f.AN)(this.asset),amount:this.getFPNumber(this.amount)})}getDecimals(t=!0){if(this.asset)return t?this.asset.decimals:this.asset.externalDecimals}get accountAddressFrom(){return this.isSoraToEvm?this.getWalletAddress():this.evmAddress}get accountAddressTo(){return this.isSoraToEvm?this.evmAddress:this.getWalletAddress()}formatBalance(t=!0){if(!this.isRegisteredAsset)return"-";const e=(0,f.rh)(this.asset,{internal:t});if(!e)return"-";const s=this.getDecimals(t);return this.formatCodecNumber(e,s)}created(){this.resetBridgeForm(!!p.ZP.currentRoute.params.address)}destroyed(){this.resetBalanceSubscription()}getBridgeItemTitle(t=!1){return this.t(this.formatNetwork(t))}getCopyTooltip(t=!1){return this.copyTooltip(this.t("bridge."+(t?"soraAddress":"ethereumAddress")))}async handleSwitchItems(){this.setSoraToEvm(!this.isSoraToEvm),await this.getEvmNetworkFee()}handleMaxValue(){if(this.asset&&this.isRegisteredAsset){const t=this.isSoraToEvm?this.soraNetworkFee:this.evmNetworkFee,e=(0,f.MN)(this.asset,t,!this.isSoraToEvm);this.setAmount(e)}}async handleConfirmTransaction(){if(!this.isXorSufficientForNextOperation){if(this.openWarningFeeDialog(),await this.waitOnNextTxFailureConfirmation(),!this.isWarningFeeDialogConfirmed)return;this.isWarningFeeDialogConfirmed=!1}await this.checkConnectionToExternalAccount((()=>{this.showConfirmTransactionDialog=!0}))}handleViewTransactionsHistory(){p.ZP.push({name:b.sn.BridgeTransactionsHistory})}handleChangeNetwork(){this.showSelectNetworkDialog=!0}openSelectAssetDialog(){this.showSelectTokenDialog=!0}async selectNetwork(t){this.showSelectNetworkDialog=!1,this.setEvmNetwork(t)}async selectAsset(t){t&&await this.withSelectAssetLoading((async()=>{await this.setAssetAddress(t.address),await this.getEvmNetworkFee()}))}async confirmTransaction(t){t&&await this.checkConnectionToExternalAccount((async()=>{const t=await this.generateHistoryItem(),{assetAddress:e,type:s,id:i}=t;if(s===d.Operation.EthBridgeOutgoing&&e){const t=this.accountAssetsAddressTable[e];t||await this.addAssetToAccountAssets(e)}this.setHistoryId(i),p.ZP.push({name:b.sn.BridgeTransaction})}))}};(0,r.__decorate)([v.SB.bridge.evmNetworkFeeFetching],k.prototype,"evmNetworkFeeFetching",void 0),(0,r.__decorate)([v.SB.web3.subNetworks],k.prototype,"subNetworks",void 0),(0,r.__decorate)([v.SB.bridge.amount],k.prototype,"amount",void 0),(0,r.__decorate)([v.SB.bridge.isSoraToEvm],k.prototype,"isSoraToEvm",void 0),(0,r.__decorate)([v.Yn.bridge.asset],k.prototype,"asset",void 0),(0,r.__decorate)([v.Yn.bridge.isRegisteredAsset],k.prototype,"isRegisteredAsset",void 0),(0,r.__decorate)([v.Yn.settings.nodeIsConnected],k.prototype,"nodeIsConnected",void 0),(0,r.__decorate)([v.QF.bridge.setSoraToEvm],k.prototype,"setSoraToEvm",void 0),(0,r.__decorate)([v.QF.bridge.setHistoryId],k.prototype,"setHistoryId",void 0),(0,r.__decorate)([v.QF.bridge.setAmount],k.prototype,"setAmount",void 0),(0,r.__decorate)([v.aD.bridge.setAssetAddress],k.prototype,"setAssetAddress",void 0),(0,r.__decorate)([v.aD.bridge.resetBridgeForm],k.prototype,"resetBridgeForm",void 0),(0,r.__decorate)([v.aD.bridge.resetBalanceSubscription],k.prototype,"resetBalanceSubscription",void 0),(0,r.__decorate)([v.aD.bridge.updateBalanceSubscription],k.prototype,"updateBalanceSubscription",void 0),(0,r.__decorate)([v.aD.bridge.getEvmNetworkFee],k.prototype,"getEvmNetworkFee",void 0),(0,r.__decorate)([v.aD.bridge.generateHistoryItem],k.prototype,"generateHistoryItem",void 0),(0,r.__decorate)([v.aD.wallet.account.addAsset],k.prototype,"addAssetToAccountAssets",void 0),(0,r.__decorate)([(0,n.RL)("nodeIsConnected")],k.prototype,"updateConnectionSubsriptions",null),k=(0,r.__decorate)([(0,n.wA)({components:{GenericPageHeader:(0,p.kF)(b.z8.GenericPageHeader),SelectNetwork:(0,p.kF)(b.z8.SelectNetwork),SelectRegisteredAsset:(0,p.kF)(b.z8.SelectRegisteredAsset),ConfirmBridgeTransactionDialog:(0,p.kF)(b.z8.ConfirmBridgeTransactionDialog),NetworkFeeWarningDialog:(0,p.kF)(b.z8.NetworkFeeWarningDialog),BridgeTransactionDetails:(0,p.kF)(b.z8.BridgeTransactionDetails),TokenSelectButton:(0,p.kF)(b.z8.TokenSelectButton),FormattedAmount:c.wx.FormattedAmount,FormattedAmountWithFiatValue:c.wx.FormattedAmountWithFiatValue,InfoLine:c.wx.InfoLine,TokenAddress:c.wx.TokenAddress}})],k);var w=k,A=w,S=s(1001),_=(0,S.Z)(A,i,o,!1,null,"e2a35554",null),y=_.exports}}]);