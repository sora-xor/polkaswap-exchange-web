"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[8878],{88878:function(i,t,e){e.r(t),e.d(t,{default:function(){return y}});var s=function(){var i=this,t=i.$createElement,e=i._self._c||t;return e("router-view",i._g(i._b({},"router-view",Object.assign({},{parentLoading:i.poolLoading},i.$attrs),!1),i.$listeners))},n=[],o=e(34563),a=e(70655),u=e(53545),c=e(8638),d=e(74614);let r=class extends((0,u.Wr)(c.tA.LoadingMixin)){constructor(...i){super(...i),(0,o.Z)(this,"subscribeOnAccountLiquidityList",void 0),(0,o.Z)(this,"subscribeOnAccountLiquidityUpdates",void 0),(0,o.Z)(this,"unsubscribe",void 0),(0,o.Z)(this,"isLoggedIn",void 0),(0,o.Z)(this,"nodeIsConnected",void 0)}async updateSubscriptions(i){i?await this.updateLiquiditySubscription():await this.unsubscribe()}get poolLoading(){return this.parentLoading||this.loading}async mounted(){await this.updateLiquiditySubscription()}async beforeDestroy(){await this.unsubscribe()}async updateLiquiditySubscription(){this.loading||await this.withLoading((async()=>{await this.withParentLoading((async()=>{await this.subscribeOnAccountLiquidityUpdates(),await this.subscribeOnAccountLiquidityList()}))}))}};(0,a.__decorate)([d.aD.pool.subscribeOnAccountLiquidityList],r.prototype,"subscribeOnAccountLiquidityList",void 0),(0,a.__decorate)([d.aD.pool.subscribeOnAccountLiquidityUpdates],r.prototype,"subscribeOnAccountLiquidityUpdates",void 0),(0,a.__decorate)([d.aD.pool.unsubscribeAccountLiquidityListAndUpdates],r.prototype,"unsubscribe",void 0),(0,a.__decorate)([d.Yn.wallet.account.isLoggedIn],r.prototype,"isLoggedIn",void 0),(0,a.__decorate)([d.Yn.settings.nodeIsConnected],r.prototype,"nodeIsConnected",void 0),(0,a.__decorate)([(0,u.RL)("isLoggedIn"),(0,u.RL)("nodeIsConnected")],r.prototype,"updateSubscriptions",null),r=(0,a.__decorate)([u.wA],r);var p=r,b=p,L=e(1001),l=(0,L.Z)(b,s,n,!1,null,null,null),y=l.exports}}]);