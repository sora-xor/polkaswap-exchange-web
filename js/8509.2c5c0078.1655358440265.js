"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[8509],{68509:function(t,e,s){s.r(e),s.d(e,{default:function(){return _}});var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"swap-container"},[s("s-form",{directives:[{name:"loading",rawName:"v-loading",value:t.parentLoading,expression:"parentLoading"}],staticClass:"container el-form--actions",attrs:{"show-message":!1}},[s("generic-page-header",{staticClass:"page-header--swap",attrs:{title:t.t("exchange.Swap")}},[s("status-action-badge",{scopedSlots:t._u([{key:"label",fn:function(){return[t._v(t._s(t.t("marketText"))+":")]},proxy:!0},{key:"value",fn:function(){return[t._v(t._s(t.swapMarketAlgorithm))]},proxy:!0},{key:"action",fn:function(){return[s("s-button",{staticClass:"el-button--settings",attrs:{type:"action",icon:"basic-settings-24",disabled:!t.marketAlgorithmsAvailable},on:{click:t.openSettingsDialog}})]},proxy:!0}])})],1),s("s-float-input",{staticClass:"s-input--token-value",attrs:{size:"medium",value:t.fromValue,decimals:t.tokenFromDecimals,"has-locale-string":"",delimiters:t.delimiters,max:t.tokenFromMax},on:{input:t.handleInputFieldFrom,focus:function(e){return t.handleFocusField(!1)}}},[s("div",{staticClass:"input-line",attrs:{slot:"top"},slot:"top"},[s("div",{staticClass:"input-title"},[s("span",{staticClass:"input-title--uppercase input-title--primary"},[t._v(t._s(t.t("transfers.from")))]),t.areTokensSelected&&!t.isZeroToAmount&&t.isExchangeB?s("span",{staticClass:"input-title--uppercase input-title--primary"},[t._v(" ("+t._s(t.t("swap.estimated"))+") ")]):t._e()]),t.isLoggedIn&&t.tokenFrom&&t.tokenFrom.balance?s("div",{staticClass:"input-value"},[s("span",{staticClass:"input-value--uppercase"},[t._v(t._s(t.t("exchange.balance")))]),s("formatted-amount-with-fiat-value",{attrs:{"value-can-be-hidden":"","with-left-shift":"","value-class":"input-value--primary",value:t.formatBalance(t.tokenFrom),"fiat-value":t.getFiatBalance(t.tokenFrom)}})],1):t._e()]),s("div",{staticClass:"s-flex el-buttons",attrs:{slot:"right"},slot:"right"},[t.tokenFrom&&t.isMaxSwapAvailable?s("s-button",{staticClass:"el-button--max s-typography-button--small",attrs:{type:"primary",alternative:"",size:"mini","border-radius":"mini"},on:{click:t.handleMaxValue}},[t._v(" "+t._s(t.t("buttons.max"))+" ")]):t._e(),s("token-select-button",{staticClass:"el-button--select-token",attrs:{icon:"chevron-down-rounded-16",token:t.tokenFrom},on:{click:function(e){return t.openSelectTokenDialog(!0)}}})],1),s("div",{staticClass:"input-line input-line--footer",attrs:{slot:"bottom"},slot:"bottom"},[t.tokenFrom&&t.tokenFromPrice?s("formatted-amount",{attrs:{"is-fiat-value":"",value:t.fromFiatAmount}}):t._e(),t.tokenFrom?s("token-address",{staticClass:"input-value",attrs:{name:t.tokenFrom.name,symbol:t.tokenFrom.symbol,address:t.tokenFrom.address}}):t._e()],1)]),s("s-button",{staticClass:"el-button--switch-tokens",attrs:{type:"action",icon:"arrows-swap-90-24",disabled:!t.areTokensSelected},on:{click:t.handleSwitchTokens}}),s("s-float-input",{staticClass:"s-input--token-value",attrs:{size:"medium",value:t.toValue,decimals:t.tokenToDecimals,"has-locale-string":"",delimiters:t.delimiters,max:t.tokenToMax},on:{input:t.handleInputFieldTo,focus:function(e){return t.handleFocusField(!0)}}},[s("div",{staticClass:"input-line",attrs:{slot:"top"},slot:"top"},[s("div",{staticClass:"input-title"},[s("span",{staticClass:"input-title--uppercase input-title--primary"},[t._v(t._s(t.t("transfers.to")))]),!t.areTokensSelected||t.isZeroFromAmount||t.isExchangeB?t._e():s("span",{staticClass:"input-title--uppercase input-title--primary"},[t._v(" ("+t._s(t.t("swap.estimated"))+") ")])]),t.isLoggedIn&&t.tokenTo&&t.tokenTo.balance?s("div",{staticClass:"input-value"},[s("span",{staticClass:"input-value--uppercase"},[t._v(t._s(t.t("exchange.balance")))]),s("formatted-amount-with-fiat-value",{attrs:{"value-can-be-hidden":"","with-left-shift":"","value-class":"input-value--primary",value:t.formatBalance(t.tokenTo),"fiat-value":t.getFiatBalance(t.tokenTo)}})],1):t._e()]),s("div",{staticClass:"s-flex el-buttons",attrs:{slot:"right"},slot:"right"},[s("token-select-button",{staticClass:"el-button--select-token",attrs:{icon:"chevron-down-rounded-16",token:t.tokenTo},on:{click:function(e){return t.openSelectTokenDialog(!1)}}})],1),s("div",{staticClass:"input-line input-line--footer",attrs:{slot:"bottom"},slot:"bottom"},[t.tokenTo&&t.tokenToPrice?s("div",{staticClass:"price-difference"},[s("formatted-amount",{attrs:{"is-fiat-value":"",value:t.toFiatAmount}}),s("value-status-wrapper",{staticClass:"price-difference__value",attrs:{value:t.fiatDifference}},[t._v(" ("),s("formatted-amount",{attrs:{value:t.fiatDifferenceFormatted}},[t._v("%")]),t._v(") ")],1)],1):t._e(),t.tokenTo?s("token-address",{staticClass:"input-value",attrs:{name:t.tokenTo.name,symbol:t.tokenTo.symbol,address:t.tokenTo.address}}):t._e()],1)]),s("slippage-tolerance",{staticClass:"slippage-tolerance-settings"}),t.isLoggedIn?s("s-button",{staticClass:"action-button s-typography-button--large",attrs:{type:"primary",disabled:t.isConfirmSwapDisabled,loading:t.isSelectAssetLoading},on:{click:t.handleConfirmSwap}},[t.areTokensSelected?t.isAvailable?t.areZeroAmounts?[t._v(" "+t._s(t.t("buttons.enterAmount"))+" ")]:t.isInsufficientLiquidity?[t._v(" "+t._s(t.t("swap.insufficientLiquidity"))+" ")]:t.isInsufficientBalance?[t._v(" "+t._s(t.t("exchange.insufficientBalance",{tokenSymbol:t.tokenFromSymbol}))+" ")]:t.isInsufficientXorForFee?[t._v(" "+t._s(t.t("exchange.insufficientBalance",{tokenSymbol:t.KnownSymbols.XOR}))+" ")]:[t._v(" "+t._s(t.t("exchange.Swap"))+" ")]:[t._v(" "+t._s(t.t("swap.pairIsNotCreated"))+" ")]:[t._v(" "+t._s(t.t("buttons.chooseTokens"))+" ")]],2):s("s-button",{staticClass:"action-button s-typography-button--large",attrs:{type:"primary"},on:{click:t.handleConnectWallet}},[t._v(" "+t._s(t.t("swap.connectWallet"))+" ")]),t.areTokensSelected&&!t.hasZeroAmount?s("swap-transaction-details",{staticClass:"info-line-container",attrs:{"info-only":!1}}):t._e(),s("select-token",{attrs:{visible:t.showSelectTokenDialog,connected:t.isLoggedIn,asset:t.isTokenFromSelected?t.tokenTo:t.tokenFrom},on:{"update:visible":function(e){t.showSelectTokenDialog=e},select:t.selectToken}}),s("confirm-swap",{attrs:{visible:t.showConfirmSwapDialog,isInsufficientBalance:t.isInsufficientBalance},on:{"update:visible":function(e){t.showConfirmSwapDialog=e},confirm:t.confirmSwap}}),s("settings-dialog",{attrs:{visible:t.showSettings},on:{"update:visible":function(e){t.showSettings=e}}})],1),t.chartsEnabled?[t._v("charts are enabled")]:t._e()],2)},o=[],a=s(34563),n=s(70655),r=s(53545),l=s(8638),u=s(36930),d=s(82753),c=s(32806),h=s(91487),p=s(85530),m=s(80710),k=s(16546),F=s(74614),g=s(25108);let b=class extends((0,r.Wr)(l.tA.FormattedAmountMixin,l.tA.LoadingMixin,c.Z,h.Z)){constructor(...t){super(...t),(0,a.Z)(this,"networkFees",void 0),(0,a.Z)(this,"paths",void 0),(0,a.Z)(this,"payload",void 0),(0,a.Z)(this,"isExchangeB",void 0),(0,a.Z)(this,"fromValue",void 0),(0,a.Z)(this,"toValue",void 0),(0,a.Z)(this,"xor",void 0),(0,a.Z)(this,"liquiditySource",void 0),(0,a.Z)(this,"nodeIsConnected",void 0),(0,a.Z)(this,"chartsEnabled",void 0),(0,a.Z)(this,"isLoggedIn",void 0),(0,a.Z)(this,"tokenFrom",void 0),(0,a.Z)(this,"tokenTo",void 0),(0,a.Z)(this,"isAvailable",void 0),(0,a.Z)(this,"marketAlgorithmsAvailable",void 0),(0,a.Z)(this,"swapMarketAlgorithm",void 0),(0,a.Z)(this,"setFromValue",void 0),(0,a.Z)(this,"setToValue",void 0),(0,a.Z)(this,"setAmountWithoutImpact",void 0),(0,a.Z)(this,"setExchangeB",void 0),(0,a.Z)(this,"setLiquidityProviderFee",void 0),(0,a.Z)(this,"setEnabledAssets",void 0),(0,a.Z)(this,"setRewards",void 0),(0,a.Z)(this,"setTokenFromAddress",void 0),(0,a.Z)(this,"setTokenToAddress",void 0),(0,a.Z)(this,"reset",void 0),(0,a.Z)(this,"setSubscriptionPayload",void 0),(0,a.Z)(this,"resetSubscriptions",void 0),(0,a.Z)(this,"updateSubscriptions",void 0),(0,a.Z)(this,"delimiters",u.FPNumber.DELIMITERS_CONFIG),(0,a.Z)(this,"KnownSymbols",d.KnownSymbols),(0,a.Z)(this,"isTokenFromSelected",!1),(0,a.Z)(this,"showSettings",!1),(0,a.Z)(this,"showSelectTokenDialog",!1),(0,a.Z)(this,"showConfirmSwapDialog",!1),(0,a.Z)(this,"liquidityReservesSubscription",null),(0,a.Z)(this,"enabledAssetsSubscription",null),(0,a.Z)(this,"recountSwapValues",(0,p._1)(this.runRecountSwapValues,100))}handleLiquiditySourceChange(){this.subscribeOnSwapReserves()}handleLoggedInStateChange(t,e){!e&&t&&this.recountSwapValues()}updateConnectionSubsriptions(t){t?(this.updateSubscriptions(),this.subscribeOnEnabledAssets(),this.subscribeOnSwapReserves()):(this.resetSubscriptions(),this.cleanEnabledAssetsSubscription(),this.cleanSwapReservesSubscription())}get tokenFromSymbol(){return this.tokenFrom?.symbol??""}get tokenFromMax(){return this.getMax(this.tokenFrom?.address)}get tokenToMax(){return this.getMax(this.tokenTo?.address)}get tokenFromDecimals(){return this.tokenFrom?.decimals??u.FPNumber.DEFAULT_PRECISION}get tokenToDecimals(){return this.tokenTo?.decimals??u.FPNumber.DEFAULT_PRECISION}get areTokensSelected(){return!(!this.tokenFrom||!this.tokenTo)}get isZeroFromAmount(){return(0,p.yA)(this.fromValue)}get isZeroToAmount(){return(0,p.yA)(this.toValue)}get hasZeroAmount(){return this.isZeroFromAmount||this.isZeroToAmount}get areZeroAmounts(){return this.isZeroFromAmount&&this.isZeroToAmount}get fromFiatAmount(){return this.tokenFrom&&this.fromValue&&this.getFiatAmountByString(this.fromValue,this.tokenFrom)||"0"}get toFiatAmount(){return this.tokenTo&&this.toValue&&this.getFiatAmountByString(this.toValue,this.tokenTo)||"0"}get fiatDifference(){const t=new RegExp(`\\${u.FPNumber.DELIMITERS_CONFIG.thousand}`,"g"),e=new RegExp(`\\${u.FPNumber.DELIMITERS_CONFIG.decimal}`,"g"),s=s=>s.replace(t,"").replace(e,"."),i=s(this.fromFiatAmount),o=s(this.toFiatAmount);if((0,p.yA)(i)||(0,p.yA)(o))return"0";const a=new u.FPNumber(i),n=new u.FPNumber(o),r=n.sub(a).div(a).mul(this.Hundred).toFixed(2);return r}get fiatDifferenceFormatted(){return this.formatStringValue(this.fiatDifference)}get isXorOutputSwap(){return this.tokenTo?.address===d.XOR.address}get isMaxSwapAvailable(){return!(!this.tokenFrom||!this.tokenTo)&&(this.isLoggedIn&&(0,p.oI)(this.areTokensSelected,this.tokenFrom,this.fromValue,this.networkFee,this.xor,!1,this.isXorOutputSwap))}get preparedForSwap(){return this.isLoggedIn&&this.areTokensSelected}get isInsufficientLiquidity(){return this.isAvailable&&this.preparedForSwap&&!this.areZeroAmounts&&this.hasZeroAmount}get isInsufficientBalance(){return!!this.tokenFrom&&(this.preparedForSwap&&(0,p.Vl)(this.tokenFrom,this.fromValue,this.networkFee))}get isInsufficientXorForFee(){const t=this.preparedForSwap&&(0,p.LG)(this.xor,this.networkFee,this.isXorOutputSwap);if(t||!this.isXorOutputSwap)return t;const e=this.getFPNumberFromCodec(this.xor.balance?.transferable??"0",this.xor.decimals),s=this.getFPNumberFromCodec(this.networkFee,this.xor.decimals).sub(e),i=this.getFPNumber(this.toValue,this.xor.decimals).sub(u.FPNumber.gt(s,this.Zero)?s:this.Zero);return u.FPNumber.lte(i,this.Zero)}get tokenFromPrice(){return this.tokenFrom?this.getAssetFiatPrice(this.tokenFrom):null}get tokenToPrice(){return this.tokenTo?this.getAssetFiatPrice(this.tokenTo):null}get networkFee(){return this.networkFees[u.Operation.Swap]}get isConfirmSwapDisabled(){return!this.areTokensSelected||!this.isAvailable||this.areZeroAmounts||this.isInsufficientLiquidity||this.isInsufficientBalance||this.isInsufficientXorForFee}created(){this.withApi((async()=>{this.tokenFrom||(await this.setTokenFromAddress(d.XOR.address),await this.setTokenToAddress()),this.enabledAssetsSubscription||this.subscribeOnEnabledAssets()}))}formatBalance(t){return(0,p.SL)(t)}resetFieldFrom(){this.setFromValue("")}resetFieldTo(){this.setToValue("")}handleInputFieldFrom(t,e=!0){this.areTokensSelected&&!(0,p.yA)(t)||this.resetFieldTo(),t!==this.fromValue&&(this.setFromValue(t),e&&this.recountSwapValues())}handleInputFieldTo(t,e=!0){this.areTokensSelected&&!(0,p.yA)(t)||this.resetFieldFrom(),t!==this.toValue&&(this.setToValue(t),e&&this.recountSwapValues())}runRecountSwapValues(){const t=this.isExchangeB?this.toValue:this.fromValue;if(!this.areTokensSelected||(0,p.yA)(t))return;const e=this.isExchangeB?this.setFromValue:this.setToValue,s=this.isExchangeB?this.resetFieldFrom:this.resetFieldTo,i=this.isExchangeB?this.tokenFrom:this.tokenTo;try{const{amount:s,fee:o,rewards:a,amountWithoutImpact:n}=l.hi.swap.getResult(this.tokenFrom,this.tokenTo,t,this.isExchangeB,[this.liquiditySource].filter(Boolean),this.paths,this.payload);e(this.getStringFromCodec(s,i.decimals)),this.setAmountWithoutImpact(n),this.setLiquidityProviderFee(o),this.setRewards(a)}catch(o){g.error(o),s()}}cleanEnabledAssetsSubscription(){this.enabledAssetsSubscription?.unsubscribe(),this.enabledAssetsSubscription=null}subscribeOnEnabledAssets(){this.cleanEnabledAssetsSubscription(),this.enabledAssetsSubscription=l.hi.swap.subscribeOnPrimaryMarketsEnabledAssets().subscribe(this.setEnabledAssets)}cleanSwapReservesSubscription(){this.liquidityReservesSubscription?.unsubscribe(),this.liquidityReservesSubscription=null}subscribeOnSwapReserves(){this.cleanSwapReservesSubscription(),this.areTokensSelected&&(this.liquidityReservesSubscription=l.hi.swap.subscribeOnReserves(this.tokenFrom.address,this.tokenTo.address,this.liquiditySource).subscribe(this.onChangeSwapReserves))}async onChangeSwapReserves(t){await this.setSubscriptionPayload(t),this.runRecountSwapValues()}handleFocusField(t=!1){const e=t?this.isZeroToAmount:this.isZeroFromAmount,s=this.isExchangeB;this.setExchangeB(t),e&&(this.resetFieldFrom(),this.resetFieldTo()),s!==this.isExchangeB&&this.recountSwapValues()}async handleSwitchTokens(){if(!this.tokenFrom||!this.tokenTo)return;const[t,e]=[this.tokenFrom.address,this.tokenTo.address];await this.setTokenFromAddress(e),await this.setTokenToAddress(t),this.isExchangeB?(this.setExchangeB(!1),this.handleInputFieldFrom(this.toValue)):(this.setExchangeB(!0),this.handleInputFieldTo(this.fromValue)),this.subscribeOnSwapReserves()}handleMaxValue(){if(!this.tokenFrom)return;this.setExchangeB(!1);const t=(0,p.MN)(this.tokenFrom,this.networkFee);this.handleInputFieldFrom(t)}handleConnectWallet(){m.ZP.push({name:k.sn.Wallet})}openSelectTokenDialog(t){this.isTokenFromSelected=t,this.showSelectTokenDialog=!0}async selectToken(t){t&&await this.withSelectAssetLoading((async()=>{this.isTokenFromSelected?await this.setTokenFromAddress(t.address):await this.setTokenToAddress(t.address),this.subscribeOnSwapReserves()}))}handleConfirmSwap(){this.showConfirmSwapDialog=!0}async confirmSwap(t){t&&(this.resetFieldFrom(),this.resetFieldTo(),this.setExchangeB(!1))}openSettingsDialog(){this.showSettings=!0}beforeDestroy(){this.cleanEnabledAssetsSubscription(),this.cleanSwapReservesSubscription()}destroyed(){this.reset()}};(0,n.__decorate)([F.SB.wallet.settings.networkFees],b.prototype,"networkFees",void 0),(0,n.__decorate)([F.SB.swap.paths],b.prototype,"paths",void 0),(0,n.__decorate)([F.SB.swap.payload],b.prototype,"payload",void 0),(0,n.__decorate)([F.SB.swap.isExchangeB],b.prototype,"isExchangeB",void 0),(0,n.__decorate)([F.SB.swap.fromValue],b.prototype,"fromValue",void 0),(0,n.__decorate)([F.SB.swap.toValue],b.prototype,"toValue",void 0),(0,n.__decorate)([F.Yn.assets.xor],b.prototype,"xor",void 0),(0,n.__decorate)([F.Yn.swap.swapLiquiditySource],b.prototype,"liquiditySource",void 0),(0,n.__decorate)([F.Yn.settings.nodeIsConnected],b.prototype,"nodeIsConnected",void 0),(0,n.__decorate)([F.Yn.settings.chartsEnabled],b.prototype,"chartsEnabled",void 0),(0,n.__decorate)([F.Yn.wallet.account.isLoggedIn],b.prototype,"isLoggedIn",void 0),(0,n.__decorate)([F.Yn.swap.tokenFrom],b.prototype,"tokenFrom",void 0),(0,n.__decorate)([F.Yn.swap.tokenTo],b.prototype,"tokenTo",void 0),(0,n.__decorate)([F.Yn.swap.isAvailable],b.prototype,"isAvailable",void 0),(0,n.__decorate)([F.Yn.swap.marketAlgorithmsAvailable],b.prototype,"marketAlgorithmsAvailable",void 0),(0,n.__decorate)([F.Yn.swap.swapMarketAlgorithm],b.prototype,"swapMarketAlgorithm",void 0),(0,n.__decorate)([F.QF.swap.setFromValue],b.prototype,"setFromValue",void 0),(0,n.__decorate)([F.QF.swap.setToValue],b.prototype,"setToValue",void 0),(0,n.__decorate)([F.QF.swap.setAmountWithoutImpact],b.prototype,"setAmountWithoutImpact",void 0),(0,n.__decorate)([F.QF.swap.setExchangeB],b.prototype,"setExchangeB",void 0),(0,n.__decorate)([F.QF.swap.setLiquidityProviderFee],b.prototype,"setLiquidityProviderFee",void 0),(0,n.__decorate)([F.QF.swap.setPrimaryMarketsEnabledAssets],b.prototype,"setEnabledAssets",void 0),(0,n.__decorate)([F.QF.swap.setRewards],b.prototype,"setRewards",void 0),(0,n.__decorate)([F.aD.swap.setTokenFromAddress],b.prototype,"setTokenFromAddress",void 0),(0,n.__decorate)([F.aD.swap.setTokenToAddress],b.prototype,"setTokenToAddress",void 0),(0,n.__decorate)([F.aD.swap.reset],b.prototype,"reset",void 0),(0,n.__decorate)([F.aD.swap.setSubscriptionPayload],b.prototype,"setSubscriptionPayload",void 0),(0,n.__decorate)([F.aD.swap.resetSubscriptions],b.prototype,"resetSubscriptions",void 0),(0,n.__decorate)([F.aD.swap.updateSubscriptions],b.prototype,"updateSubscriptions",void 0),(0,n.__decorate)([(0,r.RL)("liquiditySource")],b.prototype,"handleLiquiditySourceChange",null),(0,n.__decorate)([(0,r.RL)("isLoggedIn")],b.prototype,"handleLoggedInStateChange",null),(0,n.__decorate)([(0,r.RL)("nodeIsConnected")],b.prototype,"updateConnectionSubsriptions",null),b=(0,n.__decorate)([(0,r.wA)({components:{GenericPageHeader:(0,m.kF)(k.z8.GenericPageHeader),SettingsDialog:(0,m.kF)(k.z8.SettingsDialog),SlippageTolerance:(0,m.kF)(k.z8.SlippageTolerance),SelectToken:(0,m.kF)(k.z8.SelectToken),ConfirmSwap:(0,m.kF)(k.z8.ConfirmSwap),StatusActionBadge:(0,m.kF)(k.z8.StatusActionBadge),TokenSelectButton:(0,m.kF)(k.z8.TokenSelectButton),ValueStatusWrapper:(0,m.kF)(k.z8.ValueStatusWrapper),SwapTransactionDetails:(0,m.kF)(k.z8.SwapTransactionDetails),FormattedAmount:l.wx.FormattedAmount,FormattedAmountWithFiatValue:l.wx.FormattedAmountWithFiatValue,TokenAddress:l.wx.TokenAddress}})],b);var v=b,w=v,S=s(1001),f=(0,S.Z)(w,i,o,!1,null,"1dac023a",null),_=f.exports}}]);