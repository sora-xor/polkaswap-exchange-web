var b=Object.defineProperty;var g=(a,e,t)=>e in a?b(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var u=(a,e,t)=>g(a,typeof e!="symbol"?e+"":e,t);import{m as v,T as x,E as h,B as m,v as M,w as _,x as s,y as i,z as y,A as E,D as A,g as C,h as T,f as w,G as O,C as P}from"./index-BHqySXo4.js";var D=Object.defineProperty,L=Object.getOwnPropertyDescriptor,N=(a,e,t,o)=>{for(var r=o>1?void 0:o?L(e,t):e,n=a.length-1,c;n>=0;n--)(c=a[n])&&(r=(o?c(e,t,r):c(r))||r);return o&&r&&D(e,t,r),r};const{ETH_BRIDGE_STATES:d}=w,R=(a,e,t,o,r)=>{var f,S;const n=[],c=a.blockExplorerUrls[0],l=((f=a.nodes)==null?void 0:f[0].address)?`https://polkadot.js.org/apps/?rpc=${(S=a.nodes)==null?void 0:S[0].address}#/explorer/query`:"";return c&&n.push({type:w.ExplorerType.Subscan,value:c}),l&&n.push({type:w.ExplorerType.Polkadot,value:l}),O(n,e===h.Account,t,o,r)},B=(a,e,t)=>{const o=[],r=a.blockExplorerUrls[0];if(r&&t){const n=e===h.Transaction?"tx":"address",c={type:"etherscan",value:`${r}/${n}/${t}`};o.push(c)}return o};let k=class extends v(x){constructor(){super(...arguments);u(this,"soraNetwork");u(this,"selectedNetwork");u(this,"availableNetworks");u(this,"EvmLinkType",h)}get selectedNetworkName(){var e;return((e=this.selectedNetwork)==null?void 0:e.name)??""}get selectedNetworkShortName(){var e;return((e=this.selectedNetwork)==null?void 0:e.shortName)??""}formatSelectedNetwork(e){return e&&this.soraNetwork?this.TranslationConsts.soraNetwork[this.soraNetwork]:this.selectedNetworkName}formatNetworkShortName(e){return e?this.TranslationConsts.Sora:this.selectedNetworkShortName}getNetworkName(e,t){var r;return e&&t?((r=(e===m.Sub?M:_)[t])==null?void 0:r.shortName)??"":""}getNetworkIcon(e){switch(e){case 0:return"sora";case i.BinanceSmartChainMainnet:case i.BinanceSmartChainTestnet:return"binance-smart-chain";case i.PolygonMainnet:case i.PolygonTestnetMumbai:return"polygon";case i.KlaytnMainnet:case i.KlaytnTestnetBaobab:return"klaytn";case i.AvalancheMainnet:case i.AvalancheTestnetFuji:return"avalanche";case i.EthereumClassicMainnet:case i.EthereumClassicTestnetMordor:return"ethereum-classic";case s.Polkadot:return"polkadot";case s.PolkadotSora:return"sora-polkadot";case s.PolkadotAcala:return"acala";case s.PolkadotAstar:return"astar";case s.PolkadotMoonbeam:return"moonbeam";case s.Kusama:return"kusama";case s.KusamaCurio:return"curio";case s.KusamaShiden:return"shiden";case s.Rococo:return"rococo";case s.RococoSora:return"sora-rococo";case s.KusamaSora:return"sora-kusama";case s.Liberland:return"liberland";case s.Alphanet:return"alphanet";case s.AlphanetSora:return"sora-alphanet";case s.AlphanetMoonbase:return"moonbase";default:return"ethereum"}}getNetworkExplorerLinks(e,t,o,r,n,c=h.Transaction){var l;const p=(l=this.availableNetworks[e][t])==null?void 0:l.data;return p?e===m.Sub?R(p,c,o,r,n):B(p,c,o):(console.error(`Network data for "${t}" is not defined"`),[])}isOutgoingTx(e){return y(e)}isFailedState(e){return e!=null&&e.transactionState?!!([d.EVM_REJECTED,d.SORA_REJECTED].includes(e.transactionState)||e.transactionState===E.Failed):!1}isSuccessState(e){return e?e.transactionState===(this.isOutgoingTx(e)?d.EVM_COMMITED:d.SORA_COMMITED)||e.transactionState===E.Done:!1}isWaitingForAction(e){return e?A(e):!1}formatDatetime(e){return this.formatDate((e==null?void 0:e.startTime)??Date.now())}};N([C.wallet.settings.soraNetwork],k.prototype,"soraNetwork",2);N([T.web3.selectedNetwork],k.prototype,"selectedNetwork",2);N([T.web3.availableNetworks],k.prototype,"availableNetworks",2);k=N([P],k);export{k as N};
