var m=Object.defineProperty;var C=(o,t,e)=>t in o?m(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var a=(o,t,e)=>C(o,typeof t!="symbol"?t+"":t,e);import{m as P,$ as w,gX as S,aD as l,b as A,f as b,g as h,h as y,i as K,k as u,C as T,l as d,j as g,n as v}from"./index-BHqySXo4.js";import{S as _}from"./SubscriptionsMixin-D6BOGEEX.js";var U=Object.defineProperty,I=Object.getOwnPropertyDescriptor,n=(o,t,e,i)=>{for(var s=i>1?void 0:i?I(t,e):t,p=o.length-1,c;p>=0;p--)(c=o[p])&&(s=(i?c(t,e,s):c(s))||s);return i&&s&&U(t,e,s),s},f=(o=>(o.StartPage="StartPage",o.KYC="KYC",o.ConfirmationInfo="ConfirmationInfo",o.Dashboard="Dashboard",o.Maintenance="Maintenance",o))(f||{});let r=class extends P(w.LoadingMixin,_){constructor(){super(...arguments);a(this,"Step",f);a(this,"attemptCounter");a(this,"wantsToPassKycAgain");a(this,"currentStatus");a(this,"soraCardEnabled");a(this,"setWillToPassKycAgain");a(this,"getUserStatus");a(this,"getUserKycAttempt");a(this,"getUserIban");a(this,"getFees");a(this,"subscribeToTotalXorBalance");a(this,"unsubscribeFromTotalXorBalance");a(this,"subscribeOnList");a(this,"subscribeOnUpdates");a(this,"unsubscribe");a(this,"loginAccount");a(this,"source");a(this,"step",null);a(this,"getReadyPage",!1);a(this,"isRedirectFromFearless",!0)}get isUnderMaintenance(){return this.step==="Maintenance"}get showIntro(){return["StartPage","Maintenance"].includes(this.step)}get hasFreeAttempts(){return this.attemptCounter.hasFreeAttempts}get hasTokens(){const e=localStorage.getItem("PW-token"),i=localStorage.getItem("PW-refresh-token");return i==="undefined"?!1:!!e&&!!i}openKycPage(e=!1){this.getReadyPage=e,this.step="KYC"}openStartPage(){this.step="StartPage"}openKycResultPage(){this.step="ConfirmationInfo"}openDashboard(){this.step="Dashboard"}logout(){this.openStartPage()}async checkKyc(){if((this.soraCardEnabled===void 0||this.soraCardEnabled===null)&&await S(),!this.soraCardEnabled){this.step="Maintenance";return}if(await this.getUserStatus(),await this.getUserKycAttempt(),this.currentStatus===l.Rejected&&this.wantsToPassKycAgain&&this.hasFreeAttempts){this.getReadyPage=!0,this.step="KYC";return}if(this.currentStatus===l.Accepted){await this.getUserIban(),this.step="Dashboard";return}if([l.Pending,l.Rejected].includes(this.currentStatus)){this.step="ConfirmationInfo";return}this.step="StartPage"}async handleAccountChange(e){var p,c;const i=(p=(e??this.$route).query)==null?void 0:p.fearless,s=(c=(e??this.$route).query)==null?void 0:c.name;i&&s&&A.api.validateAddress(i)&&await this.loginAccount({address:i,name:s,source:b.AppWallet.FearlessWallet}),this.subscribeToTotalXorBalance()}async created(){var i,s,p;await this.withLoading(async()=>{await this.withParentLoading(async()=>{await Promise.all([this.subscribeOnList,this.subscribeOnUpdates].map(c=>c==null?void 0:c()))})}),await this.withApi(this.handleAccountChange);const e=localStorage.getItem("PW-refresh-token");this.source===b.AppWallet.FearlessWallet&&e&&((p=(s=(i=window.injectedWeb3)==null?void 0:i["fearless-wallet"])==null?void 0:s.saveSoraCardToken)==null||p.call(s,e))}async beforeRouteLeave(e,i,s){this.setWillToPassKycAgain(!1),await this.unsubscribe(),s()}async beforeRouteUpdate(e,i,s){await this.handleAccountChange(e),s()}async beforeDestroy(){await this.unsubscribeFromTotalXorBalance()}async mounted(){await this.$nextTick(),this.checkKyc(),this.getFees()}};n([h.soraCard.attemptCounter],r.prototype,"attemptCounter",2);n([h.soraCard.wantsToPassKycAgain],r.prototype,"wantsToPassKycAgain",2);n([y.soraCard.currentStatus],r.prototype,"currentStatus",2);n([y.settings.soraCardEnabled],r.prototype,"soraCardEnabled",2);n([K.soraCard.setWillToPassKycAgain],r.prototype,"setWillToPassKycAgain",2);n([u.soraCard.getUserStatus],r.prototype,"getUserStatus",2);n([u.soraCard.getUserKycAttempt],r.prototype,"getUserKycAttempt",2);n([u.soraCard.getUserIban],r.prototype,"getUserIban",2);n([u.soraCard.getFees],r.prototype,"getFees",2);n([u.soraCard.subscribeToTotalXorBalance],r.prototype,"subscribeToTotalXorBalance",2);n([u.soraCard.unsubscribeFromTotalXorBalance],r.prototype,"unsubscribeFromTotalXorBalance",2);n([u.pool.subscribeOnAccountLiquidityList],r.prototype,"subscribeOnList",2);n([u.pool.subscribeOnAccountLiquidityUpdates],r.prototype,"subscribeOnUpdates",2);n([u.pool.unsubscribeAccountLiquidityListAndUpdates],r.prototype,"unsubscribe",2);n([u.wallet.account.loginAccount],r.prototype,"loginAccount",2);n([h.wallet.account.source],r.prototype,"source",2);r=n([T({components:{SoraCardIntro:d(g.SoraCardIntroPage),SoraCardKyc:d(g.SoraCardKYC),ConfirmationInfo:d(g.ConfirmationInfo),Dashboard:d(g.Dashboard)}})],r);var F=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("div",{staticClass:"sora-card-wrapper"},[t.step===t.Step.ConfirmationInfo?e("confirmation-info",{directives:[{name:"loading",rawName:"v-loading",value:t.loading,expression:"loading"}],on:{"confirm-apply":t.openKycPage}}):t.showIntro?e("sora-card-intro",{attrs:{maintenance:t.isUnderMaintenance},on:{"confirm-apply":t.openKycPage}}):t.step===t.Step.KYC?e("sora-card-kyc",{attrs:{"get-ready-page":t.getReadyPage},on:{"go-to-start":t.openStartPage,"go-to-kyc-result":t.openKycResultPage,"go-to-dashboard":t.openDashboard}}):t.step===t.Step.Dashboard?e("dashboard",{on:{logout:t.logout}}):t._e()],1)},D=[],L=v(r,F,D,!1,null,null);const x=L.exports;export{x as default};
