var w=Object.defineProperty;var v=(u,e,t)=>e in u?w(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var s=(u,e,t)=>v(u,typeof e!="symbol"?e+"":e,t);import{m as F,$ as A,gw as T,hh as x,hi as k,r as y,Y as S,b as d,hj as N,aj as C,a2 as E,hk as B,ai as D,a4 as _,o as W,g as m,h as g,i as p,k as h,C as M,l as r,j as l,_ as b,n as I}from"./index-BHqySXo4.js";import{B as P}from"./BridgeMixin-B7wtyjiP.js";import{C as R}from"./ConfirmDialogMixin-BYoYOPfg.js";import{N as L}from"./NetworkFeeDialogMixin-DEf8HRG3.js";import{N as V}from"./NetworkFormatterMixin-DdB_9in4.js";import{T as O}from"./TokenSelectMixin-B1fkEMyI.js";import"./WalletConnectMixin-CatA0t7p.js";var H=Object.defineProperty,$=Object.getOwnPropertyDescriptor,o=(u,e,t,i)=>{for(var a=i>1?void 0:i?$(e,t):e,c=u.length-1,f;c>=0;c--)(f=u[c])&&(a=(i?f(e,t,a):f(a))||a);return i&&a&&H(e,t,a),a};let n=class extends F(A.FormattedAmountMixin,A.NetworkFeeWarningMixin,P,R,V,L,O){constructor(){super(...arguments);s(this,"KnownSymbols",T);s(this,"FocusedField",x);s(this,"subBridgeConnector");s(this,"balancesFetching");s(this,"feesAndLockedFundsFetching");s(this,"registeredAssetsFetching");s(this,"amountSend");s(this,"amountReceived");s(this,"isMST");s(this,"senderName");s(this,"recipientName");s(this,"isRegisteredAsset");s(this,"operation");s(this,"autoselectedAssetAddress");s(this,"hasWaitingForActionTx");s(this,"nodeIsConnected");s(this,"setSoraToEvm");s(this,"setHistoryId");s(this,"setFocusedField");s(this,"setSendedAmount");s(this,"setReceivedAmount");s(this,"switchDirection");s(this,"setAssetAddress");s(this,"generateHistoryItem");s(this,"addAssetToAccountAssets");s(this,"updateBridgeHistory");s(this,"showSelectTokenDialog",!1);s(this,"showWarningExternalFeeDialog",!1);s(this,"isWarningExternalFeeDialogConfirmed",!1);s(this,"showMSTWarning",!1);s(this,"selectSubNodeDialogVisibility");s(this,"setSelectSubNodeDialogVisibility")}get subConnection(){var t,i;return!this.isSubBridge||this.networkSelected!==((t=this.subBridgeConnector.network)==null?void 0:t.subNetwork)?null:(i=this.subBridgeConnector.network)==null?void 0:i.subNetworkConnection}get isExternalNetworkLoading(){var t;return this.isSubBridge?!((t=this.subConnection)!=null&&t.nodeIsConnected):!!this.evmProviderLoading}get limitCardAmount(){var t;return((t=this.isGreaterThanMaxAmount?this.transferMaxAmount:this.transferMinAmount)==null?void 0:t.toLocaleString())??""}get isDenominatedAsset(){var t;return k(((t=this.asset)==null?void 0:t.address)??"")}confirmExternalNetworkFeeWarningDialog(){this.isWarningExternalFeeDialogConfirmed=!0}openWarningExternalFeeDialog(){this.showWarningExternalFeeDialog=!0}async waitOnExternalFeeWarningConfirmation(t=500){if(this.showWarningExternalFeeDialog)return await y(t),await this.waitOnExternalFeeWarningConfirmation()}get areAccountsConnected(){return!!this.sender&&!!this.recipient}get networkName(){return this.formatNetworkShortName(!1)}get firstBalance(){return this.sender?this.getBalance(this.isSoraToEvm):null}get secondBalance(){return this.recipient?this.getBalance(!this.isSoraToEvm):null}get isZeroAmountSend(){return S(this.amountSend)}get isZeroAmountReceived(){return S(this.amountReceived)}get transferMaxAmount(){return this.getTransferMaxAmount(this.isSoraToEvm)}get transferMinAmount(){return this.getTransferMinAmount(this.isSoraToEvm)}get transferableAmount(){if(!(this.asset&&this.isRegisteredAsset&&this.areAccountsConnected))return d.FPNumber.ZERO;const t=this.isSoraToEvm?this.soraNetworkFee:this.externalNetworkFee,i=d.FPNumber.fromCodecValue(this.assetExternalMinBalance,this.asset.externalDecimals);return N(this.asset,t,{isExternalBalance:!this.isSoraToEvm,isExternalNative:this.isNativeTokenSelected}).sub(i).max(d.FPNumber.ZERO)}get maxValue(){let t=this.transferableAmount;return this.transferMaxAmount&&d.FPNumber.gt(t,this.transferMaxAmount)&&(t=this.transferMaxAmount),t.dp(this.amountDecimals).toString()}get isMaxAvailable(){return!S(this.maxValue)&&this.maxValue!==this.amountSend}get isGreaterThanMaxAmount(){return this.isGreaterThanTransferMaxAmount(this.amountSend,this.asset,this.isSoraToEvm,this.isRegisteredAsset)}get isLowerThanMinAmount(){return this.isLowerThanTransferMinAmount(this.amountSend,this.asset,this.isSoraToEvm,this.isRegisteredAsset)}get isInsufficientXorForFee(){return C(this.xor,this.soraNetworkFee)}get isInsufficientNativeTokenForFee(){return E(this.externalNativeBalance,this.externalNetworkFee)}get isInsufficientBalance(){return this.asset&&this.isRegisteredAsset&&this.sender?d.FPNumber.gt(d.FPNumber.fromNatural(this.amountSend),d.FPNumber.fromNatural(this.maxValue)):!1}get isAssetSelected(){return!!this.asset}get assetSymbol(){var t;return((t=this.asset)==null?void 0:t.symbol)??""}get formattedSoraNetworkFee(){return this.getStringFromCodec(this.soraNetworkFee)}get formattedExternalNetworkFee(){return this.getStringFromCodec(this.externalNetworkFee,this.nativeTokenDecimals)}get formattedExternalTransferFee(){var t;return this.getStringFromCodec(this.externalTransferFee,(t=this.asset)==null?void 0:t.externalDecimals)}get formattedExternalMinBalance(){var t;return this.getStringFromCodec(this.assetExternalMinBalance,(t=this.asset)==null?void 0:t.externalDecimals)}get isTxConfirmDisabled(){return!this.isAssetSelected||!this.isRegisteredAsset||!this.areAccountsConnected||!this.isValidNetwork||this.isZeroAmountSend||this.isZeroAmountReceived||this.isInsufficientXorForFee||this.isInsufficientNativeTokenForFee||this.isInsufficientBalance||this.isGreaterThanMaxAmount||this.isLowerThanMinAmount}get isConfirmTxLoading(){return this.isExternalNetworkLoading||this.isSelectAssetLoading||this.balancesFetching||this.feesAndLockedFundsFetching||this.registeredAssetsFetching}get isXorSufficientForNextOperation(){return this.asset?this.isXorSufficientForNextTx({type:this.operation,isXor:B(this.asset),amount:this.getFPNumber(this.amountSend)}):!1}get isNativeTokenSufficientForNextOperation(){if(!this.asset||this.isZeroAmountSend)return!1;const t=d.FPNumber.fromCodecValue(this.externalNetworkFee,this.nativeTokenDecimals);let a=d.FPNumber.fromCodecValue(this.externalNativeBalance,this.nativeTokenDecimals).sub(t);if(this.isNativeTokenSelected){const c=new d.FPNumber(this.amountSend,this.nativeTokenDecimals);a=this.isSoraToEvm?a.add(c):a.sub(c)}return d.FPNumber.gte(a,t)}get amountDecimals(){var a,c;const t=((a=this.asset)==null?void 0:a.decimals)??d.FPNumber.DEFAULT_PRECISION,i=((c=this.asset)==null?void 0:c.externalDecimals)??d.FPNumber.DEFAULT_PRECISION;return Math.min(t,i)}getBalance(t=!0){var c,f;if(!(this.asset&&(this.isRegisteredAsset||t)))return null;const i=D(this.asset,{internal:t});if(!i)return null;const a=t?(c=this.asset)==null?void 0:c.decimals:(f=this.asset)==null?void 0:f.externalDecimals;return this.getFPNumberFromCodec(i,a)}async created(){await this.withParentLoading(async()=>{const{address:t,amount:i,isIncoming:a}=this.$route.params;this.setSendedAmount(i),a&&this.setSoraToEvm(!1),t&&this.updateAssetAddress(t),this.isLoggedIn&&this.updateBridgeHistory()})}getCopyTooltip(t=!1){return`${this.formatNetworkShortName(t)} ${this.t("addressText")}`}getProviderIcon(t=!1){return this.isSubBridge||t?"":this.evmProvider?this.getEvmProviderIcon(this.evmProvider):""}handleMaxValue(){this.setSendedAmount(this.maxValue)}async handleConfirmButtonClick(){if(this.isMST){this.showMSTWarning=!0;return}if(this.allowFeePopup&&!this.isXorSufficientForNextOperation){if(this.openWarningFeeDialog(),await this.waitOnFeeWarningConfirmation(),!this.isWarningFeeDialogConfirmed)return;this.isWarningFeeDialogConfirmed=!1}if(this.allowFeePopup&&!this.isNativeTokenSufficientForNextOperation){if(this.openWarningExternalFeeDialog(),await this.waitOnExternalFeeWarningConfirmation(),!this.isWarningExternalFeeDialogConfirmed)return;this.isWarningExternalFeeDialogConfirmed=!1}this.confirmOrExecute(this.confirmTransaction)}handleChangeSubNode(){this.setSelectSubNodeDialogVisibility(!0)}openSelectAssetDialog(){this.showSelectTokenDialog=!0}async selectAsset(t){t&&await this.updateAssetAddress(t.address)}async updateAssetAddress(t){await this.withSelectAssetLoading(async()=>{await this.setAssetAddress(t)})}async confirmTransaction(){const t=await this.generateHistoryItem(),{assetAddress:i,id:a}=t;i&&!this.accountAssetsAddressTable[i]&&await this.addAssetToAccountAssets(i),this.setHistoryId(a),_.push({name:W.BridgeTransaction})}connectWallet(t){t?this.connectSoraWallet():this.connectExternalWallet()}disconnectWallet(t){t?this.disconnectSoraWallet():this.disconnectExternalWallet()}connectExternalWallet(){this.isSubAccountType?this.connectSubWallet():this.connectEvmWallet()}disconnectExternalWallet(){this.isSubAccountType?this.disconnectSubWallet():this.disconnectEvmWallet()}};o([m.bridge.subBridgeConnector],n.prototype,"subBridgeConnector",2);o([m.bridge.balancesFetching],n.prototype,"balancesFetching",2);o([m.bridge.feesAndLockedFundsFetching],n.prototype,"feesAndLockedFundsFetching",2);o([m.assets.registeredAssetsFetching],n.prototype,"registeredAssetsFetching",2);o([m.bridge.amountSend],n.prototype,"amountSend",2);o([m.bridge.amountReceived],n.prototype,"amountReceived",2);o([m.wallet.account.isMST],n.prototype,"isMST",2);o([g.bridge.senderName],n.prototype,"senderName",2);o([g.bridge.recipientName],n.prototype,"recipientName",2);o([g.bridge.isRegisteredAsset],n.prototype,"isRegisteredAsset",2);o([g.bridge.operation],n.prototype,"operation",2);o([g.bridge.autoselectedAssetAddress],n.prototype,"autoselectedAssetAddress",2);o([g.bridge.hasWaitingForActionTx],n.prototype,"hasWaitingForActionTx",2);o([g.settings.nodeIsConnected],n.prototype,"nodeIsConnected",2);o([p.bridge.setSoraToEvm],n.prototype,"setSoraToEvm",2);o([p.bridge.setHistoryId],n.prototype,"setHistoryId",2);o([p.bridge.setFocusedField],n.prototype,"setFocusedField",2);o([h.bridge.setSendedAmount],n.prototype,"setSendedAmount",2);o([h.bridge.setReceivedAmount],n.prototype,"setReceivedAmount",2);o([h.bridge.switchDirection],n.prototype,"switchDirection",2);o([h.bridge.setAssetAddress],n.prototype,"setAssetAddress",2);o([h.bridge.generateHistoryItem],n.prototype,"generateHistoryItem",2);o([h.wallet.account.addAsset],n.prototype,"addAssetToAccountAssets",2);o([h.bridge.updateBridgeHistory],n.prototype,"updateBridgeHistory",2);o([m.web3.selectSubNodeDialogVisibility],n.prototype,"selectSubNodeDialogVisibility",2);o([p.web3.setSelectSubNodeDialogVisibility],n.prototype,"setSelectSubNodeDialogVisibility",2);n=o([M({components:{BridgeSelectAsset:r(l.BridgeSelectAsset),BridgeSelectSubAccount:r(l.BridgeSelectSubAccount),BridgeAccountPanel:r(l.BridgeAccountPanel),BridgeNodeIcon:r(l.BridgeNodeIcon),BridgeTransactionDetails:r(l.BridgeTransactionDetails),BridgeLimitCard:r(l.BridgeLimitCard),BridgeNetworkSelector:r(l.BridgeNetworkSelector),SelectNodeDialog:r(l.SelectNodeDialog),GenericPageHeader:r(l.GenericPageHeader),ConfirmBridgeTransactionDialog:r(l.ConfirmBridgeTransactionDialog),NetworkFeeWarningDialog:r(l.NetworkFeeWarningDialog),TokenSelectButton:r(l.TokenSelectButton),TokenInput:r(l.TokenInput),AppBrowserMSTWarningBridge:r(l.AppBrowserMSTWarningBridge),FormattedAmount:b.FormattedAmount,FormattedAmountWithFiatValue:b.FormattedAmountWithFiatValue,InfoLine:b.InfoLine,TokenAddress:b.TokenAddress}})],n);var Z=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{staticClass:"bridge s-flex"},[t("s-form",{staticClass:"bridge-form",attrs:{"show-message":!1}},[t("s-card",{directives:[{name:"loading",rawName:"v-loading",value:e.parentLoading,expression:"parentLoading"}],staticClass:"bridge-content",attrs:{"border-radius":"medium",shadow:"always",size:"big",primary:""}},[t("generic-page-header",{staticClass:"header--bridge",attrs:{title:e.t("hashiBridgeText"),tooltip:e.t("bridge.info")}},[t("div",{staticClass:"bridge-header-buttons"},[e.isLoggedIn?t("s-button",{staticClass:"history-button",attrs:{type:"action",icon:"time-time-history-24",tooltip:e.t("bridgeHistory.showHistory"),"tooltip-placement":"bottom-end"},on:{click:e.handleViewTransactionsHistory}},[e.hasWaitingForActionTx?t("span",{staticClass:"history-button-icon"}):e._e()]):e._e(),t("bridge-network-selector")],1)]),t("token-input",{attrs:{id:"bridgeFrom","data-test-name":"bridgeFrom","with-address":"",balance:e.firstBalance?e.firstBalance.toCodecString():null,decimals:e.amountDecimals,disabled:!(e.areAccountsConnected&&e.isAssetSelected),external:!e.isSoraToEvm,"without-fiat":!e.isSoraToEvm&&e.isDenominatedAsset,"is-max-available":e.isMaxAvailable,"is-select-available":!e.autoselectedAssetAddress,loading:e.isConfirmTxLoading,value:e.amountSend,title:e.t("transfers.from"),token:e.asset},on:{input:e.setSendedAmount,focus:function(i){return e.setFocusedField(e.FocusedField.Sended)},max:e.handleMaxValue,select:e.openSelectAssetDialog},scopedSlots:e._u([{key:"title-append",fn:function(){return[t("span",{staticClass:"input-title--network"},[e._v(e._s(e.formatSelectedNetwork(e.isSoraToEvm)))]),t("i",{class:`network-icon network-icon--${e.getNetworkIcon(e.isSoraToEvm?0:e.networkSelected)}`}),e.isSubBridge&&!e.isSoraToEvm?t("bridge-node-icon",{attrs:{connection:e.subConnection},on:{click:e.handleChangeSubNode}}):e._e()]},proxy:!0}])},[t("bridge-account-panel",{attrs:{"data-test-name":"connectPolkadot",address:e.sender,name:e.senderName,tooltip:e.getCopyTooltip(e.isSoraToEvm),icon:e.getProviderIcon(e.isSoraToEvm)},on:{connect:function(i){return e.connectWallet(e.isSoraToEvm)},disconnect:function(i){return e.disconnectWallet(e.isSoraToEvm)}}})],1),t("s-button",{staticClass:"s-button--switch",attrs:{"data-test-name":"switchToken",type:"action",icon:"arrows-swap-90-24",disabled:e.isConfirmTxLoading},on:{click:e.switchDirection}}),t("token-input",{attrs:{id:"bridgeTo","data-test-name":"bridgeTo","with-address":"",balance:e.secondBalance?e.secondBalance.toCodecString():null,decimals:e.amountDecimals,disabled:!(e.areAccountsConnected&&e.isAssetSelected),external:e.isSoraToEvm,"without-fiat":e.isSoraToEvm&&e.isDenominatedAsset,loading:e.isConfirmTxLoading,value:e.amountReceived,title:e.t("transfers.to"),token:e.asset},on:{input:e.setReceivedAmount,focus:function(i){return e.setFocusedField(e.FocusedField.Received)},select:e.openSelectAssetDialog},scopedSlots:e._u([{key:"title-append",fn:function(){return[t("span",{staticClass:"input-title--network"},[e._v(e._s(e.formatSelectedNetwork(!e.isSoraToEvm)))]),t("i",{class:`network-icon network-icon--${e.getNetworkIcon(e.isSoraToEvm?e.networkSelected:0)}`}),e.isSubBridge&&e.isSoraToEvm?t("bridge-node-icon",{attrs:{connection:e.subConnection},on:{click:e.handleChangeSubNode}}):e._e()]},proxy:!0}])},[t("bridge-account-panel",{attrs:{"data-test-name":"useMetamaskProvider",address:e.recipient,name:e.recipientName,tooltip:e.getCopyTooltip(!e.isSoraToEvm),icon:e.getProviderIcon(!e.isSoraToEvm)},on:{connect:function(i){return e.connectWallet(!e.isSoraToEvm)},disconnect:function(i){return e.disconnectWallet(!e.isSoraToEvm)}}})],1),!e.isValidNetwork&&e.areAccountsConnected?t("s-button",{staticClass:"el-button--next s-typography-button--big",attrs:{type:"primary"},on:{click:e.changeEvmNetworkProvided}},[e._v(" "+e._s(e.t("changeNetworkText"))+" ")]):e.areAccountsConnected?[t("s-button",{staticClass:"el-button--next s-typography-button--large",attrs:{"data-test-name":"nextButton",type:"primary",disabled:e.isTxConfirmDisabled,loading:e.isConfirmTxLoading},on:{click:e.handleConfirmButtonClick}},[e.isAssetSelected?e.isRegisteredAsset?e.isZeroAmountSend?[e._v(" "+e._s(e.t("buttons.enterAmount"))+" ")]:e.isZeroAmountReceived?[e._v(" "+e._s(e.t("swap.insufficientAmount",{tokenSymbol:e.assetSymbol}))+" ")]:e.isInsufficientBalance?[e._v(" "+e._s(e.t("insufficientBalanceText",{tokenSymbol:e.assetSymbol}))+" ")]:e.isInsufficientXorForFee?[e._v(" "+e._s(e.t("insufficientBalanceText",{tokenSymbol:e.KnownSymbols.XOR}))+" ")]:e.isInsufficientNativeTokenForFee?[e._v(" "+e._s(e.t("insufficientBalanceText",{tokenSymbol:e.nativeTokenSymbol}))+" ")]:e.isGreaterThanMaxAmount?[e._v(" "+e._s(e.t("exceededAmountText",{amount:e.t("maxAmountText")}))+" ")]:e.isLowerThanMinAmount?[e._v(" "+e._s(e.t("exceededAmountText",{amount:e.t("minAmountText")}))+" ")]:[e._v(" "+e._s(e.t("bridge.next"))+" ")]:[e._v(" "+e._s(e.t("bridge.notRegisteredAsset",{assetSymbol:e.assetSymbol}))+" ")]:[e._v(" "+e._s(e.t("buttons.chooseAToken"))+" ")]],2),e.isLowerThanMinAmount||e.isGreaterThanMaxAmount?t("bridge-limit-card",{staticClass:"bridge-limit-card",attrs:{max:e.isGreaterThanMaxAmount,amount:e.limitCardAmount,symbol:e.assetSymbol}}):e._e(),!e.isZeroAmountReceived&&e.isRegisteredAsset?t("bridge-transaction-details",{staticClass:"info-line-container",attrs:{asset:e.asset,"native-token":e.nativeToken,"external-transfer-fee":e.formattedExternalTransferFee,"external-network-fee":e.formattedExternalNetworkFee,"external-min-balance":e.formattedExternalMinBalance,"sora-network-fee":e.formattedSoraNetworkFee,"network-name":e.networkName}}):e._e()]:e._e()],2)],1),e.areAccountsConnected?e._e():t("div",{staticClass:"bridge-footer"},[e._v(e._s(e.t("bridge.connectWallets")))]),t("bridge-select-asset",{attrs:{visible:e.showSelectTokenDialog,asset:e.asset},on:{"update:visible":function(i){e.showSelectTokenDialog=i},select:e.selectAsset}}),t("bridge-select-sub-account",{attrs:{visible:e.showSelectTokenDialog},on:{"update:visible":function(i){e.showSelectTokenDialog=i}}}),t("app-browser-m-s-t-warning-bridge",{attrs:{visible:e.showMSTWarning},on:{"update:visible":function(i){e.showMSTWarning=i}}}),e.subConnection?t("select-node-dialog",{attrs:{connection:e.subConnection,network:e.selectedNetworkName,visibility:e.selectSubNodeDialogVisibility,"set-visibility":e.setSelectSubNodeDialogVisibility}}):e._e(),t("confirm-bridge-transaction-dialog",{attrs:{visible:e.confirmDialogVisibility,"is-sora-to-evm":e.isSoraToEvm,asset:e.asset,"amount-send":e.amountSend,"amount-received":e.amountReceived,network:e.networkSelected,"network-type":e.networkType,"native-token":e.nativeToken,"external-transfer-fee":e.formattedExternalTransferFee,"external-network-fee":e.formattedExternalNetworkFee,"sora-network-fee":e.formattedSoraNetworkFee},on:{"update:visible":function(i){e.confirmDialogVisibility=i},confirm:e.confirmTransaction}}),t("network-fee-warning-dialog",{attrs:{visible:e.showWarningFeeDialog,fee:e.formatStringValue(e.formattedSoraNetworkFee)},on:{"update:visible":function(i){e.showWarningFeeDialog=i},confirm:e.confirmNetworkFeeWariningDialog}}),t("network-fee-warning-dialog",{attrs:{visible:e.showWarningExternalFeeDialog,fee:e.formatStringValue(e.formattedExternalNetworkFee),symbol:e.nativeTokenSymbol,payoff:!1},on:{"update:visible":function(i){e.showWarningExternalFeeDialog=i},confirm:e.confirmExternalNetworkFeeWarningDialog}})],1)},X=[],G=I(n,Z,X,!1,null,"d3a37031");const te=G.exports;export{te as default};
