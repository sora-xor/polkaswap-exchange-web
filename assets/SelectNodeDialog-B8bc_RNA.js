var p=Object.defineProperty;var m=(s,t,e)=>t in s?p(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var i=(s,t,e)=>m(s,typeof t!="symbol"?t+"":t,e);import{m as v,g_ as w,$ as C,x as g,g$ as y,C as b,_ as A,l as N,j as u,P as l,n as _}from"./index-BHqySXo4.js";import{p as I}from"./pick-Bpm14bMh.js";import{N as V}from"./consts-lPM2p5U7.js";var L=Object.defineProperty,S=Object.getOwnPropertyDescriptor,a=(s,t,e,n)=>{for(var o=n>1?void 0:n?S(t,e):t,d=s.length-1,c;d>=0;d--)(c=s[d])&&(o=(n?c(t,e,o):c(o))||o);return n&&o&&L(t,e,o),o};const h="NodeListView",f="NodeInfoView";let r=class extends v(w,C.LoadingMixin){constructor(){super(...arguments);i(this,"connection");i(this,"visibility");i(this,"setVisibility");i(this,"network");i(this,"currentView",h);i(this,"selectedNode",{})}get visible(){return this.visibility}set visible(e){this.setVisibility(e),e||this.handleBack()}get isSoraNetwork(){return this.network===g.Mainnet}get nodeAddressConnecting(){return this.connection.nodeAddressConnecting}get connectionAllowance(){return this.connection.connectionAllowance}get connectedNodeAddress(){var e;return this.nodeAddressConnecting?"":((e=this.connection.node)==null?void 0:e.address)??""}set connectedNodeAddress(e){if(e===this.connectedNodeAddress)return;const n=this.findNodeInListByAddress(e);this.handleNode(n)}get isSelectedNodeRemovable(){return!!this.connection.customNodes.find(e=>{var n;return e.address===((n=this.selectedNode)==null?void 0:n.address)})}get isSelectedNodeConnected(){var e;return this.isConnectedNodeAddress((e=this.selectedNode)==null?void 0:e.address)}get existingNodeIsSelected(){var e;return!!this.findNodeInListByAddress(((e=this.selectedNode)==null?void 0:e.address)??"")}get isNodeListView(){return this.currentView===h}get dialogCustomClass(){return this.isNodeListView?"":"select-node-dialog--add-node"}async handleNode(e,n=!1){try{await this.setCurrentNode(e,n),this.selectedNode.address===e.address&&this.currentView===f&&this.handleBack()}catch{}}async removeNode(e){this.connection.removeCustomNode(e),this.handleBack(),this.isConnectedNodeAddress(e.address)&&await this.setCurrentNode(this.connection.defaultNodes[0])}navigateToNodeInfo(e){this.selectedNode=e??{},this.changeView(f)}handleBack(){this.changeView(h)}getNodePermittedData(e){return I(Object.keys(V))(e)}async setCurrentNode(e,n=!1){const o=this.getNodePermittedData(e);if(n){const d=this.findInList(this.connection.defaultNodes,o.address);if(d){const c=new y({key:"node.errors.existing",payload:{title:d.chain}});return this.handleNodeError(c,d)}}await this.connection.connect({node:o,onError:this.handleNodeError,onDisconnect:this.handleNodeDisconnect,onReconnect:this.handleNodeConnect,onConnect:this.handleNodeConnect}),n&&this.connection.updateCustomNode(o),this.selectedNode=this.findNodeInListByAddress(o.address)}changeView(e){this.currentView=e}findInList(e,n){return e.find(o=>o.address===n)}findNodeInListByAddress(e){return this.findInList(this.connection.nodeList,e)}isConnectedNodeAddress(e){return!!this.connectedNodeAddress&&!!e&&this.connectedNodeAddress===e}};a([l({required:!0,type:Object})],r.prototype,"connection",2);a([l({required:!0,type:Boolean})],r.prototype,"visibility",2);a([l({required:!0,type:Function})],r.prototype,"setVisibility",2);a([l({default:()=>g.Mainnet,type:String})],r.prototype,"network",2);r=a([b({components:{DialogBase:A.DialogBase,SelectNode:N(u.SelectNode),NodeInfo:N(u.NodeInfo)}})],r);var x=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("dialog-base",{class:["select-node-dialog",t.dialogCustomClass],attrs:{visible:t.visible,title:t.t("selectNodeDialog.title")},on:{"update:visible":function(n){t.visible=n}}},[t.isNodeListView?e("select-node",{attrs:{"node-address-connecting":t.nodeAddressConnecting,nodes:t.connection.nodeList,"handle-node":t.handleNode,"view-node":t.navigateToNodeInfo,disabled:!t.connectionAllowance},model:{value:t.connectedNodeAddress,callback:function(n){t.connectedNodeAddress=n},expression:"connectedNodeAddress"}}):e("node-info",{attrs:{node:t.selectedNode,existing:t.existingNodeIsSelected,"node-address-connecting":t.nodeAddressConnecting,removable:t.isSelectedNodeRemovable,connected:t.isSelectedNodeConnected,"handle-back":t.handleBack,"handle-node":t.handleNode,"remove-node":t.removeNode,"show-tutorial":t.isSoraNetwork,disabled:!t.connectionAllowance}})],1)},B=[],D=_(r,x,B,!1,null,null);const O=D.exports;export{O as default};
