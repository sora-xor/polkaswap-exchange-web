var x=Object.defineProperty;var f=(s,e,r)=>e in s?x(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r;var n=(s,e,r)=>f(s,typeof e!="symbol"?e+"":e,r);import{m as h,$ as M,b as p,a4 as c,o as d,g as u,h as l,C as T}from"./index-BHqySXo4.js";import{W as b}from"./WalletConnectMixin-CatA0t7p.js";var A=Object.defineProperty,v=Object.getOwnPropertyDescriptor,i=(s,e,r,a)=>{for(var o=a>1?void 0:a?v(e,r):e,g=s.length-1,m;g>=0;g--)(m=s[g])&&(o=(a?m(e,r,o):m(o))||o);return a&&o&&A(e,r,o),o};let t=class extends h(M.LoadingMixin,b){constructor(){super(...arguments);n(this,"externalNativeBalance");n(this,"assetLockedBalance");n(this,"assetExternalMinBalance");n(this,"outgoingMinLimit");n(this,"outgoingMaxLimit");n(this,"incomingMinAmount");n(this,"soraNetworkFee");n(this,"externalTransferFee");n(this,"isSoraToEvm");n(this,"isValidNetwork");n(this,"asset");n(this,"nativeToken");n(this,"sender");n(this,"recipient");n(this,"externalNetworkFee");n(this,"isNativeTokenSelected");n(this,"isSidechainAsset");n(this,"xor")}get nativeTokenSymbol(){var e;return((e=this.nativeToken)==null?void 0:e.symbol)??""}get nativeTokenDecimals(){var e;return(e=this.nativeToken)==null?void 0:e.externalDecimals}get externalTransferFeeFP(){var e;return p.FPNumber.fromCodecValue(this.externalTransferFee,(e=this.asset)==null?void 0:e.externalDecimals)}get outgoingMaxAmount(){const e=[this.outgoingMaxLimit];this.isSidechainAsset&&e.push(this.assetLockedBalance);const r=e.filter(a=>!!a);return r.length?p.FPNumber.min(...r):null}get outgoingMinAmount(){return this.outgoingMinLimit?this.outgoingMinLimit.add(this.externalTransferFeeFP):null}get incomingMaxAmount(){return this.isSidechainAsset?null:this.assetLockedBalance??null}getTransferMaxAmount(e){return e?this.outgoingMaxAmount:this.incomingMaxAmount}getTransferMinAmount(e){return e?this.outgoingMinAmount:this.incomingMinAmount}isGreaterThanTransferMaxAmount(e,r,a,o=!0){const g=this.getTransferMaxAmount(a);if(!(r&&o&&g))return!1;const m=new p.FPNumber(e);return p.FPNumber.gt(m,g)}isLowerThanTransferMinAmount(e,r,a,o=!0){const g=this.getTransferMinAmount(a);if(!(r&&o&&g))return!1;const m=new p.FPNumber(e);return p.FPNumber.lt(m,g)}handleViewTransactionsHistory(){c.push({name:d.BridgeTransactionsHistory})}navigateToBridge(){c.push({name:d.Bridge})}};i([u.bridge.externalNativeBalance],t.prototype,"externalNativeBalance",2);i([u.bridge.assetLockedBalance],t.prototype,"assetLockedBalance",2);i([u.bridge.assetExternalMinBalance],t.prototype,"assetExternalMinBalance",2);i([u.bridge.outgoingMinLimit],t.prototype,"outgoingMinLimit",2);i([u.bridge.outgoingMaxLimit],t.prototype,"outgoingMaxLimit",2);i([u.bridge.incomingMinLimit],t.prototype,"incomingMinAmount",2);i([u.bridge.soraNetworkFee],t.prototype,"soraNetworkFee",2);i([u.bridge.externalTransferFee],t.prototype,"externalTransferFee",2);i([u.bridge.isSoraToEvm],t.prototype,"isSoraToEvm",2);i([l.web3.isValidNetwork],t.prototype,"isValidNetwork",2);i([l.bridge.asset],t.prototype,"asset",2);i([l.bridge.nativeToken],t.prototype,"nativeToken",2);i([l.bridge.sender],t.prototype,"sender",2);i([l.bridge.recipient],t.prototype,"recipient",2);i([l.bridge.externalNetworkFee],t.prototype,"externalNetworkFee",2);i([l.bridge.isNativeTokenSelected],t.prototype,"isNativeTokenSelected",2);i([l.bridge.isSidechainAsset],t.prototype,"isSidechainAsset",2);i([l.assets.xor],t.prototype,"xor",2);t=i([T],t);export{t as B};
