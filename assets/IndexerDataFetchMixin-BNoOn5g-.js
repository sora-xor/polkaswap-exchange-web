var m=Object.defineProperty;var g=(a,t,e)=>t in a?m(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var s=(a,t,e)=>g(a,typeof t!="symbol"?t+"":t,e);import{m as p,$ as u,gA as d,gB as f,f as o,W as P,C as b}from"./index-BHqySXo4.js";var D=Object.defineProperty,I=Object.getOwnPropertyDescriptor,l=(a,t,e,n)=>{for(var i=n>1?void 0:n?I(t,e):t,r=a.length-1,h;r>=0;r--)(h=a[r])&&(i=(n?h(t,e,i):h(i))||i);return n&&i&&D(t,e,i),i};let c=class extends p(u.LoadingMixin,u.PaginationSearchMixin){constructor(){super(...arguments);s(this,"totalCount",0);s(this,"items",[]);s(this,"pageAmount",5);s(this,"fetchAmount",5);s(this,"interval",null);s(this,"updateItems",d(this.updateData,250,{leading:!1}));s(this,"updateInterval",24e3)}get intervalTimestamp(){return Math.floor(this.getItemTimestamp(this.items[0])/1e3)}get loadingState(){return this.parentLoading||this.loading}get total(){return this.totalCount}get hasItems(){return this.total>0}get dataVariables(){return{}}get updateVariables(){return{}}get fetchPage(){return Math.ceil(this.pageAmount*this.currentPage/this.fetchAmount)}get visibleItems(){const t=this.fetchAmount*(this.fetchPage-1),e=this.pageAmount*(this.currentPage-1)-t,n=e+this.pageAmount;return this.items.slice(e,n)}checkPageToLoad(){this.updateItems()}checkTriggerUpdate(t,e){f(t)(e)||(this.resetPage(),this.resetItems(),this.updateItems())}async requestData(t){return console.info("[IndexerDataFetchMixin]: requestData is not implemented"),{items:[],totalCount:0}}getItemTimestamp(t){return console.info("[IndexerDataFetchMixin]: getItemTimestamp is not implemented"),0}handlePaginationClick(t){let e=1;switch(t){case o.PaginationButton.Prev:e=this.currentPage-1;break;case o.PaginationButton.Next:e=this.currentPage+1;break;case o.PaginationButton.Last:e=this.lastPage;break}this.currentPage=e}async updateData(){this.resetDataSubscription(),await this.fetchData(),this.fetchPage===1&&this.subscribeOnData()}resetItems(){this.items=[],this.totalCount=0}async fetchData(){await this.withLoading(async()=>{await this.withParentLoading(async()=>{const{totalCount:t,items:e}=await this.requestData(this.dataVariables);this.items=Object.freeze([...e]),this.totalCount=t})})}async fetchDataUpdates(){const{items:t,totalCount:e}=await this.requestData(this.updateVariables);this.items=Object.freeze([...t,...this.items].slice(0,this.fetchAmount)),this.totalCount=this.totalCount+e}subscribeOnData(){this.resetDataSubscription(),this.interval=setInterval(()=>this.fetchDataUpdates(),this.updateInterval)}resetDataSubscription(){this.interval&&clearInterval(this.interval),this.interval=null}beforeDestroy(){this.resetDataSubscription()}};l([P("fetchPage")],c.prototype,"checkPageToLoad",1);c=l([b],c);export{c as I};
