var p=Object.defineProperty;var F=(u,t,s)=>t in u?p(u,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):u[t]=s;var e=(u,t,s)=>F(u,typeof t!="symbol"?t+"":t,s);import{m as w,$ as y,T as A,at as b,hI as P,b as d,aj as N,Z as f,hV as S,aJ as v,hW as c,ai as E,g as o,h,i as k,k as l,C as V}from"./index-BHqySXo4.js";var x=Object.defineProperty,B=Object.getOwnPropertyDescriptor,r=(u,t,s,i)=>{for(var n=i>1?void 0:i?B(t,s):t,g=u.length-1,m;g>=0;g--)(m=u[g])&&(n=(i?m(t,s,n):m(n))||n);return i&&n&&x(t,s,n),n};let a=class extends w(y.FormattedAmountMixin,A){constructor(){super(...arguments);e(this,"stakingInfo");e(this,"newStakeValidatorsMode");e(this,"minNominatorBond");e(this,"unbondPeriod");e(this,"stakeAmount");e(this,"validators");e(this,"selectedValidators");e(this,"activeEra");e(this,"activeEraStart");e(this,"currentEra");e(this,"currentEraTotalStake");e(this,"maxNominations");e(this,"accountLedger");e(this,"pendingRewards");e(this,"validatorsFilter");e(this,"showValidatorsFilterDialog");e(this,"payee");e(this,"controller");e(this,"networkFees");e(this,"stash");e(this,"xor");e(this,"getAsset");e(this,"setStakeAmount");e(this,"setValidatorsFilter");e(this,"setShowValidatorsFilterDialog");e(this,"selectValidators");e(this,"nominate");e(this,"bondAndNominate");e(this,"getBondAndNominateNetworkFee");e(this,"bondExtra");e(this,"unbond");e(this,"withdraw");e(this,"payout");e(this,"getPayoutNetworkFee");e(this,"getPendingRewards");e(this,"StakingPageNames",b);e(this,"SoraStakingPageNames",P)}get networkFee(){return this.networkFees[d.Operation.StakingBond]}get networkFeeFormatted(){return this.formatCodecNumber(this.networkFee)}get isInsufficientXorForFee(){return!!this.xor&&N(this.xor,this.networkFee)}get pricesAvailable(){return Object.keys(this.fiatPriceObject).length>0}get stakingAsset(){return this.xor}get stakingAssetPrice(){return(this.stakingAsset&&this.getAssetFiatPrice(this.stakingAsset))??f}get rewardAsset(){return this.getAsset(S)}get totalStaked(){return d.FPNumber.fromCodecValue(this.currentEraTotalStake).mul(d.FPNumber.fromCodecValue(this.stakingAssetPrice))}get totalStakedFormatted(){return`$${v(this.totalStaked)}`}get lockedFunds(){var t,s,i,n;return this.accountLedger?d.FPNumber.fromCodecValue((t=this.accountLedger)==null?void 0:t.active,(s=this.stakingAsset)==null?void 0:s.decimals):this.stakingInfo?new d.FPNumber((i=this.stakingInfo)==null?void 0:i.activeStake,(n=this.stakingAsset)==null?void 0:n.decimals):d.FPNumber.ZERO}get lockedFundsFiat(){return this.stakingAsset?this.getFiatAmountByFPNumber(this.lockedFunds,this.stakingAsset):null}get unlockingFunds(){var t;return(((t=this.accountLedger)==null?void 0:t.unlocking)??[]).reduce((s,i)=>{var n;return s.add(d.FPNumber.fromCodecValue(i.value.toString(),(n=this.stakingAsset)==null?void 0:n.decimals))},d.FPNumber.ZERO)}get unlockingFundsFiat(){return this.stakingAsset?this.getFiatAmountByFPNumber(this.unlockingFunds,this.stakingAsset):null}get nextWithdrawalEra(){var n;if(!((n=this.accountLedger)!=null&&n.unlocking.length)||!this.activeEra)return null;const t=this.accountLedger.unlocking.map(g=>g.era),s=this.activeEra,i=t.map(g=>g-s).filter(g=>g>0);return i.length?s+Math.min(...i):null}get unbondPeriodHours(){return this.unbondPeriod*c}get unbondPeriodFormatted(){if(!this.unbondPeriodHours)return null;const t=Math.floor(this.unbondPeriodHours/c),s=this.unbondPeriodHours-t*c;return`${t}D ${s}H 0M`}get withdrawableFunds(){var t;return this.stakingInfo?new d.FPNumber(this.stakingInfo.redeemAmount,(t=this.stakingAsset)==null?void 0:t.decimals):d.FPNumber.ZERO}get withdrawableFundsFiat(){return this.stakingAsset?this.getFiatAmountByFPNumber(this.withdrawableFunds,this.stakingAsset):null}get withdrawableFundsFormatted(){return this.withdrawableFunds.toLocaleString()}get rewardedFunds(){var t;return this.pendingRewards?(t=this.pendingRewards)==null?void 0:t.reduce((s,i)=>{var n;return s.add(new d.FPNumber(i.sumRewards,(n=this.rewardAsset)==null?void 0:n.decimals))},d.FPNumber.ZERO):d.FPNumber.ZERO}get rewardedFundsFiat(){return this.rewardAsset?this.getFiatAmountByFPNumber(this.rewardedFunds,this.rewardAsset):null}get rewardedFundsFormatted(){return this.rewardedFunds.toLocaleString()}get stakingInitialized(){var t;return((t=this.stakingInfo)==null?void 0:t.totalStake)!=="0"}get stakingAssetBalance(){var t;return d.FPNumber.fromCodecValue(E(this.stakingAsset)??0,(t=this.stakingAsset)==null?void 0:t.decimals)}get funds(){return this.stakingAssetBalance}get availableFunds(){return this.funds}get minNominatorBondFormatted(){var t;return this.formatCodecNumber(`${this.minNominatorBond}`,(t=this.stakingAsset)==null?void 0:t.decimals)}get maxApy(){return this.validators.reduce((t,s)=>Math.max(t,Number(s.apy)),0)||0}};r([o.staking.stakingInfo],a.prototype,"stakingInfo",2);r([o.staking.newStakeValidatorsMode],a.prototype,"newStakeValidatorsMode",2);r([o.staking.minNominatorBond],a.prototype,"minNominatorBond",2);r([o.staking.unbondPeriod],a.prototype,"unbondPeriod",2);r([o.staking.stakeAmount],a.prototype,"stakeAmount",2);r([o.staking.validatorsInfo],a.prototype,"validators",2);r([o.staking.selectedValidators],a.prototype,"selectedValidators",2);r([o.staking.activeEra],a.prototype,"activeEra",2);r([o.staking.activeEraStart],a.prototype,"activeEraStart",2);r([o.staking.currentEra],a.prototype,"currentEra",2);r([o.staking.currentEraTotalStake],a.prototype,"currentEraTotalStake",2);r([o.staking.maxNominations],a.prototype,"maxNominations",2);r([o.staking.accountLedger],a.prototype,"accountLedger",2);r([o.staking.pendingRewards],a.prototype,"pendingRewards",2);r([o.staking.validatorsFilter],a.prototype,"validatorsFilter",2);r([o.staking.showValidatorsFilterDialog],a.prototype,"showValidatorsFilterDialog",2);r([o.staking.payee],a.prototype,"payee",2);r([o.staking.controller],a.prototype,"controller",2);r([o.wallet.settings.networkFees],a.prototype,"networkFees",2);r([h.staking.stash],a.prototype,"stash",2);r([h.assets.xor],a.prototype,"xor",2);r([h.assets.assetDataByAddress],a.prototype,"getAsset",2);r([k.staking.setStakeAmount],a.prototype,"setStakeAmount",2);r([k.staking.setValidatorsFilter],a.prototype,"setValidatorsFilter",2);r([k.staking.setShowValidatorsFilterDialog],a.prototype,"setShowValidatorsFilterDialog",2);r([k.staking.selectValidators],a.prototype,"selectValidators",2);r([l.staking.nominate],a.prototype,"nominate",2);r([l.staking.bondAndNominate],a.prototype,"bondAndNominate",2);r([l.staking.getBondAndNominateNetworkFee],a.prototype,"getBondAndNominateNetworkFee",2);r([l.staking.bondExtra],a.prototype,"bondExtra",2);r([l.staking.unbond],a.prototype,"unbond",2);r([l.staking.withdraw],a.prototype,"withdraw",2);r([l.staking.payout],a.prototype,"payout",2);r([l.staking.getPayoutNetworkFee],a.prototype,"getPayoutNetworkFee",2);r([l.staking.getPendingRewards],a.prototype,"getPendingRewards",2);a=r([V],a);export{a as S};
