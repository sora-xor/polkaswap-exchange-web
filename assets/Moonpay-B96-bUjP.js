var m=Object.defineProperty;var d=(e,i,t)=>i in e?m(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var s=(e,i,t)=>d(e,typeof i!="symbol"?i+"":i,t);import{m as h,a8 as u,h as y,g as c,i as f,k as b,W as l,C as T,_,l as M,j as P,n as v}from"./index-BHqySXo4.js";import{M as C}from"./consts-Bf-kzBRE.js";import w from"./Moonpay-D571D53h.js";import{M as V}from"./BridgeInitMixin-Btb4O7ue.js";import"./BridgeHistoryMixin-G3tlRVUy.js";import"./WalletConnectMixin-CatA0t7p.js";var D=Object.defineProperty,U=Object.getOwnPropertyDescriptor,o=(e,i,t,n)=>{for(var r=n>1?void 0:n?U(i,t):i,p=e.length-1,g;p>=0;p--)(g=e[p])&&(r=(n?g(i,t,r):g(r))||r);return n&&r&&D(i,t,r),r};let a=class extends h(V){constructor(){super(...arguments);s(this,"widgetUrl","");s(this,"transactionsPolling");s(this,"account");s(this,"libraryTheme");s(this,"transactions");s(this,"pollingTimestamp");s(this,"dialogVisibility");s(this,"setDialogVisibility");s(this,"createTransactionsPolling")}handleLoggedInStateChange(t){t||this.stopPollingMoonpay()}handleVisibleStateChange(t){t&&!this.pollingTimestamp&&this.startPollingMoonpay()}handleLanguageChange(){this.pollingTimestamp||this.updateWidgetUrl()}async handleLastTransaction(t,n){!t||n&&n.id===t.id||await this.prepareBridgeForTransfer(t)}get lastCompletedTransaction(){if(this.pollingTimestamp!==0)return this.transactions.find(t=>Date.parse(t.createdAt)>=this.pollingTimestamp&&t.status==="completed")}get visibility(){return this.dialogVisibility}set visibility(t){this.setDialogVisibility(t)}async created(){this.withApi(()=>{this.initMoonpayApi(),this.updateWidgetUrl()})}beforeDestroy(){this.stopPollingMoonpay()}createMoonpayWidgetUrl(){return this.moonpayApi.createWidgetUrl({colorCode:u("--s-color-theme-accent"),externalTransactionId:this.account.address,language:this.language})}updateWidgetUrl(){this.widgetUrl="";const t=this.createMoonpayWidgetUrl();setTimeout(()=>{this.widgetUrl=t})}async startPollingMoonpay(){console.info("Moonpay: start polling to get user transactions"),this.transactionsPolling=await this.createTransactionsPolling()}stopPollingMoonpay(){console.info("Moonpay: stop polling"),typeof this.transactionsPolling=="function"&&this.transactionsPolling()}async prepareBridgeForTransfer(t){this.setDialogVisibility(!1),this.stopPollingMoonpay(),this.updateWidgetUrl(),await this.showNotification(C.Success),await this.prepareMoonpayTxForBridgeTransfer(t,!0)}};o([y.wallet.account.account],a.prototype,"account",2);o([y.libraryTheme],a.prototype,"libraryTheme",2);o([c.moonpay.transactions],a.prototype,"transactions",2);o([c.moonpay.pollingTimestamp],a.prototype,"pollingTimestamp",2);o([c.moonpay.dialogVisibility],a.prototype,"dialogVisibility",2);o([f.moonpay.setDialogVisibility],a.prototype,"setDialogVisibility",2);o([b.moonpay.createTransactionsPolling],a.prototype,"createTransactionsPolling",2);o([l("isLoggedIn",{immediate:!0})],a.prototype,"handleLoggedInStateChange",1);o([l("visibility",{immediate:!0})],a.prototype,"handleVisibleStateChange",1);o([l("language"),l("libraryTheme")],a.prototype,"handleLanguageChange",1);o([l("lastCompletedTransaction")],a.prototype,"handleLastTransaction",1);a=o([T({components:{DialogBase:_.DialogBase,MoonpayLogo:w,IFrameWidget:M(P.IFrameWidget)}})],a);var W=function(){var i=this,t=i._self._c;return i._self._setupProxy,t("dialog-base",{staticClass:"moonpay-dialog",attrs:{visible:i.visibility},on:{"update:visible":function(n){i.visibility=n}},scopedSlots:i._u([{key:"title",fn:function(){return[t("moonpay-logo",{attrs:{theme:i.libraryTheme}})]},proxy:!0}])},[t("i-frame-widget",{attrs:{src:i.widgetUrl}})],1)},x=[],I=v(a,W,x,!1,null,null);const N=I.exports;export{N as default};
