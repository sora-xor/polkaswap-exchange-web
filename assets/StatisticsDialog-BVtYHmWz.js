var f=Object.defineProperty;var g=(n,e,t)=>e in n?f(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>g(n,typeof e!="symbol"?e+"":e,t);import{m as h,T as w,$ as V,f as p,p as _,q as b,g as o,i as v,k as I,C as D,_ as m,l as x,j as u,n as C}from"./index-BHqySXo4.js";var T=Object.defineProperty,F=Object.getOwnPropertyDescriptor,a=(n,e,t,i)=>{for(var l=i>1?void 0:i?F(e,t):e,d=n.length-1,c;d>=0;d--)(c=n[d])&&(l=(i?c(e,t,l):c(l))||l);return i&&l&&T(e,t,l),l};const y="IndexerListView",A="IndexerInfoView";let s=class extends h(w,V.NotificationMixin){constructor(){super(...arguments);r(this,"selectIndexerDialogVisibility");r(this,"soraNetwork");r(this,"indexersData");r(this,"indexerType");r(this,"ceresFiatValuesUsage");r(this,"setSelectIndexerDialogVisibility");r(this,"selectIndexer");r(this,"useCeresApiForFiatValues");r(this,"currentView",y)}get indexers(){return Object.keys(p.IndexerType).map(e=>{const t=p.IndexerType[e];return{name:_(t),type:t,endpoint:this.indexersData[t].endpoint,online:this.indexersData[t].status===b.ConnectionStatus.Available}})}get indexer(){const e=this.indexers.find(t=>t.type===this.indexerType);if(!e)throw new Error("Unknown indexer type");return e}get visibility(){return this.selectIndexerDialogVisibility}set visibility(e){this.setSelectIndexerDialogVisibility(e),e||this.handleBack()}get useCeresApi(){return this.ceresFiatValuesUsage}set useCeresApi(e){this.useCeresApiForFiatValues(e)}get selectedIndexerType(){return this.indexerType??""}set selectedIndexerType(e){if(e===this.indexerType)return;const t=this.findIndexerInListByType(e);this.handleIndexer(t)}async handleIndexer(e){await this.selectIndexer(e.type),this.indexer.type===e.type&&this.currentView===A&&this.handleBack()}handleBack(){this.changeView(y)}changeView(e){this.currentView=e}findInList(e,t){return e.find(i=>i.type===t)}findIndexerInListByType(e){return this.findInList(this.indexers,e)}};a([o.settings.selectIndexerDialogVisibility],s.prototype,"selectIndexerDialogVisibility",2);a([o.wallet.settings.soraNetwork],s.prototype,"soraNetwork",2);a([o.wallet.settings.indexers],s.prototype,"indexersData",2);a([o.wallet.settings.indexerType],s.prototype,"indexerType",2);a([o.wallet.account.ceresFiatValuesUsage],s.prototype,"ceresFiatValuesUsage",2);a([v.settings.setSelectIndexerDialogVisibility],s.prototype,"setSelectIndexerDialogVisibility",2);a([I.wallet.settings.selectIndexer],s.prototype,"selectIndexer",2);a([I.wallet.account.useCeresApiForFiatValues],s.prototype,"useCeresApiForFiatValues",2);s=a([D({components:{DialogBase:m.DialogBase,SelectIndexer:x(u.SelectIndexer),IndexerInfo:x(u.IndexerInfo)}})],s);var S=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("dialog-base",{staticClass:"select-indexer-dialog",attrs:{visible:e.visibility,title:e.t("footer.statistics.dialog.title")},on:{"update:visible":function(i){e.visibility=i}}},[t("select-indexer",{attrs:{indexer:e.selectedIndexerType,ceres:e.useCeresApi,indexers:e.indexers,environment:e.soraNetwork},on:{"update:indexer":function(i){e.selectedIndexerType=i},"update:ceres":function(i){e.useCeresApi=i}}})],1)},B=[],L=C(s,S,B,!1,null,null);const O=L.exports;export{O as default};
