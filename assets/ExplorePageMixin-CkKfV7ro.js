var x=Object.defineProperty;var I=(i,t,r)=>t in i?x(i,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):i[t]=r;var l=(i,t,r)=>I(i,typeof t!="symbol"?t+"":t,r);import{m as P,T as C,gt as c,gs as b,W as S,h as g,P as w,C as D}from"./index-BHqySXo4.js";import{S as E}from"./ScrollableTableMixin-C9crfC47.js";var v=Object.defineProperty,O=Object.getOwnPropertyDescriptor,a=(i,t,r,e)=>{for(var s=e>1?void 0:e?O(t,r):t,o=i.length-1,n;o>=0;o--)(n=i[o])&&(s=(e?n(t,r,s):n(s))||s);return e&&s&&v(t,r,s),s};let p=class extends P(E,C){constructor(){super(...arguments);l(this,"exploreQuery");l(this,"isAccountItemsOnly");l(this,"isLoggedIn");l(this,"getAsset");l(this,"whitelistAssets");l(this,"order",c.DESC);l(this,"property","tvl")}resetCurrentPage(){this.currentPage=1}get allowedAssets(){return this.whitelistAssets.length?this.whitelistAssets:[...b]}get pricesAvailable(){return Object.keys(this.fiatPriceObject).length>0}get isDefaultSort(){return!(this.order&&this.property)}get prefilteredItems(){return console.warn('[ExplorePageMixin]: "prefilteredItems" computed property is not implemented'),[]}get filteredItems(){const t=this.exploreQuery.toLowerCase().trim();if(!t)return this.prefilteredItems;const r=e=>{var s,o,n,f,d,y,u,A,h,m;return((f=(n=(o=(s=e==null?void 0:e.name)==null?void 0:s.toLowerCase)==null?void 0:o.call(s))==null?void 0:n.includes)==null?void 0:f.call(n,t))||((A=(u=(y=(d=e==null?void 0:e.symbol)==null?void 0:d.toLowerCase)==null?void 0:y.call(d))==null?void 0:u.includes)==null?void 0:A.call(u,t))||((m=(h=e==null?void 0:e.address)==null?void 0:h.toLowerCase)==null?void 0:m.call(h))===t};return this.prefilteredItems.filter(e=>r(e)||r(e.poolAsset)||r(e.rewardAsset)||r(e.baseAsset)||r(e.targetAsset)||r(e.lockedAsset)||r(e.debtAsset))}get preparedItems(){if(this.isDefaultSort)return this.filteredItems;const t=this.order===c.ASC;return[...this.filteredItems].sort((r,e)=>{const s=r[this.property],o=e[this.property];return s===o?0:(t?s>o:s<o)?1:-1})}async mounted(){await this.updateExploreData()}changeSort({order:t=c.DESC,property:r=""}={}){this.order=t,this.property=r}handleResetSort(){this.changeSort()}async updateExploreData(){console.warn('[ExplorePageMixin]: "updateExploreData" method is not implemented')}};a([w({default:"",type:String})],p.prototype,"exploreQuery",2);a([w({default:!1,type:Boolean})],p.prototype,"isAccountItemsOnly",2);a([S("exploreQuery")],p.prototype,"resetCurrentPage",1);a([g.wallet.account.isLoggedIn],p.prototype,"isLoggedIn",2);a([g.assets.assetDataByAddress],p.prototype,"getAsset",2);a([g.assets.whitelistAssets],p.prototype,"whitelistAssets",2);p=a([D],p);export{p as E};
