var m=Object.defineProperty;var d=(e,a,i)=>a in e?m(e,a,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[a]=i;var s=(e,a,i)=>d(e,typeof a!="symbol"?a+"":a,i);import{m as c,$ as p,k as h,C as g}from"./index-BHqySXo4.js";import{B as f}from"./BasePageMixin-Co7yDbqF.js";var P=Object.defineProperty,D=Object.getOwnPropertyDescriptor,l=(e,a,i,r)=>{for(var t=r>1?void 0:r?D(a,i):a,n=e.length-1,w;n>=0;n--)(w=e[n])&&(t=(r?w(a,i,t):w(t))||t);return r&&t&&P(a,i,t),t};let o=class extends c(f,p.TransactionMixin){constructor(){super(...arguments);s(this,"deposit");s(this,"withdraw");s(this,"claimRewards");s(this,"showStakeDialog",!1);s(this,"showClaimDialog",!1);s(this,"isAddingStake",!0)}changePoolStake(a,i=!0){this.isAddingStake=i,this.setDialogParams(a),this.showStakeDialog=!0}claimPoolRewards(a){this.setDialogParams(a),this.showClaimDialog=!0}async handleStakeAction(a,i){await this.withNotifications(async()=>{await i(a),this.showStakeDialog=!1})}async handleClaimRewards(a){await this.withNotifications(async()=>{await this.claimRewards(a),this.showClaimDialog=!1})}isActiveCollapseItem(a,i){return i.includes(a)}};l([h.demeterFarming.deposit],o.prototype,"deposit",2);l([h.demeterFarming.withdraw],o.prototype,"withdraw",2);l([h.demeterFarming.claimRewards],o.prototype,"claimRewards",2);o=l([g],o);export{o as P};
