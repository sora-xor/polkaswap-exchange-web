var m=Object.defineProperty;var f=(a,t,e)=>t in a?m(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var i=(a,t,e)=>f(a,typeof t!="symbol"?t+"":t,e);import{m as h,$ as u,X as _,Z as v,b as p,P as b,O as y,g,h as F,W as k,C as x,_ as c,l as w,j as I,R as O,n as A}from"./index-BHqySXo4.js";var C=Object.defineProperty,M=Object.getOwnPropertyDescriptor,r=(a,t,e,s)=>{for(var n=s>1?void 0:s?M(t,e):t,l=a.length-1,d;l>=0;l--)(d=a[l])&&(n=(s?d(t,e,n):d(n))||n);return s&&n&&C(t,e,n),n};let o=class extends h(u.TransactionMixin,u.DialogMixin,u.FormattedAmountMixin){constructor(){super(...arguments);i(this,"xorSymbol",_.symbol);i(this,"tokenInput");i(this,"editableFiat");i(this,"asset");i(this,"networkFees");i(this,"accountXor");i(this,"value","");i(this,"address","")}async handleDialogVisibility(e){var s;await this.$nextTick(),this.value="",this.address="",(s=this.tokenInput)==null||s.focus()}get xorBalance(){var e,s;return this.getFPNumberFromCodec(((s=(e=this.accountXor)==null?void 0:e.balance)==null?void 0:s.transferable)??v)}get tokenSymbol(){return this.asset.symbol}get title(){return`Mint ${this.tokenSymbol}`}get networkFee(){return this.networkFees[p.Operation.Mint]}get fpNetworkFee(){return this.getFPNumberFromCodec(this.networkFee)}get networkFeeFormatted(){return this.formatCodecNumber(this.networkFee)}get emptyValue(){return!+this.value}get isInsufficientXorForFee(){return this.xorBalance.sub(this.fpNetworkFee).isLtZero()}get emptyAddress(){return!this.address.trim()}get validAddress(){return!this.emptyAddress&&p.api.validateAddress(this.address)}get disabled(){return this.loading||this.isInsufficientXorForFee||this.emptyValue||!this.validAddress}async handleMint(){try{await this.withNotifications(async()=>{await p.api.assets.mint(this.asset,this.value,this.address.trim())})}finally{this.isVisible=!1}}};r([O("tokenInput")],o.prototype,"tokenInput",2);r([b({default:!1,type:Boolean})],o.prototype,"editableFiat",2);r([b({default:y,type:Object})],o.prototype,"asset",2);r([g.wallet.settings.networkFees],o.prototype,"networkFees",2);r([F.assets.xor],o.prototype,"accountXor",2);r([k("visible")],o.prototype,"handleDialogVisibility",1);o=r([x({components:{DialogBase:c.DialogBase,InfoLine:c.InfoLine,AddressBookInput:c.AddressBookInput,TokenInput:w(I.TokenInput)}})],o);var N=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("dialog-base",{attrs:{title:t.title,visible:t.isVisible,tooltip:"COMING SOON..."},on:{"update:visible":function(s){t.isVisible=s}}},[e("div",{staticClass:"dashboard-mint"},[e("address-book-input",{staticClass:"dashboard-mint__address",attrs:{"is-valid":t.validAddress,disabled:t.loading},model:{value:t.address,callback:function(s){t.address=s},expression:"address"}}),e("p",{staticClass:"p3 dashboard-mint__text"},[t._v(" ENTER THE AMOUNT YOU WANT TO MINT "),e("s-tooltip",{attrs:{slot:"suffix","border-radius":"mini",content:"COMING SOON...",placement:"top",tabindex:"-1"},slot:"suffix"},[e("s-icon",{attrs:{name:"info-16",size:"14px"}})],1)],1),e("token-input",{ref:"tokenInput",staticClass:"dashboard-mint__token-input",attrs:{title:"AMOUNT","is-fiat-editable":t.editableFiat,token:t.asset,disabled:t.loading},model:{value:t.value,callback:function(s){t.value=s},expression:"value"}}),e("s-button",{staticClass:"s-typography-button--large action-button dashboard-mint__button",attrs:{type:"primary",disabled:t.disabled},on:{click:t.handleMint}},[t.isInsufficientXorForFee?[t._v(" "+t._s(t.t("insufficientBalanceText",{tokenSymbol:t.xorSymbol}))+" ")]:t.emptyAddress?[t._v(" "+t._s(t.t("walletSend.enterAddress"))+" ")]:t.validAddress?t.emptyValue?[t._v(" "+t._s(t.t("buttons.enterAmount"))+" ")]:[t._v(t._s(t.title))]:[t._v(" "+t._s(t.t("walletSend.badAddress"))+" ")]],2),e("info-line",{attrs:{label:t.t("networkFeeText"),"label-tooltip":t.t("networkFeeTooltipText"),value:t.networkFeeFormatted,"asset-symbol":t.xorSymbol,"fiat-value":t.getFiatAmountByCodecString(t.networkFee),"is-formatted":""}})],1)])},T=[],S=A(o,N,T,!1,null,"c75725f7");const V=S.exports;export{V as default};
