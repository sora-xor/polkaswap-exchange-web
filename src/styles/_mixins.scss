// This file includes mixins for usage in different components


// TODO 4 alexnatalia: Right now this is just a mixin because there are no appropriate focus behaviour for some elements (tabs for example) and we need more time to investigate the problem
@mixin focus {
  &:focus {
    outline: 1px solid var(--s-color-theme-accent-focused) !important;
  }
}

@mixin token-styles {
  .token {
    display: flex;
    align-items: center;
    &-logo {
      margin-right: $inner-spacing-mini;
    }
    &-balance {
      margin-left: auto;
    }
    &-balance-value {
      margin-left: $inner-spacing-mini / 2;
      letter-spacing: var(--s-letter-spacing-big);
      word-break: break-all;
    }
  }
}

@mixin element-size($className: "", $width: 40px, $height: $width) {
  .#{$className} {
    height: $height;
    width: $width;
  }
}

@mixin container-styles {
  margin: $inner-spacing-big auto 0;
  padding: $inner-spacing-big $inner-spacing-big $inner-spacing-mini * 4;
  min-height: $inner-window-height;
  width: $inner-window-width;
  background-color: var(--s-color-utility-surface);
  border-radius: var(--s-border-radius-medium);
  box-shadow: var(--s-shadow-surface);
  color: var(--s-color-base-content-primary);
}

@mixin text-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin generic-input-lines($inputLineClass: "input-line") {
  .#{$inputLineClass} {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    margin-bottom: $inner-spacing-mini;
    font-size: var(--s-font-size-mini);
    font-weight: 300;
    line-height: var(--s-line-height-medium);

    &--footer {
      justify-content: flex-end;
      margin-top: $inner-spacing-mini / 2;
      margin-bottom: 0;
      min-height: $inner-spacing-mini * 2.25;
    }

    .input-title {
      display: flex;
      align-items: center;
      color: var(--s-color-base-content-secondary);

      &--primary {
        color: var(--s-color-base-content-primary);
      }

      &--uppercase {
        text-transform: uppercase;
      }

      & > *:not(:last-child) {
        margin-right: $inner-spacing-mini / 2;
      }
    }
  }
}

@mixin buttons() {
  .el-buttons {
    display: flex;
    align-items: center;
  }

  .el-button {
    &--max {
      margin-right: $inner-spacing-mini / 2;
      margin-left: $inner-spacing-mini / 2;
    }
    &--select-token {
      margin-left: $inner-spacing-mini / 2;
    }
  }
}

@mixin full-width-button($buttonClass: 's-primary', $marginTop: $inner-spacing-medium) {
  .#{$buttonClass} {
    margin-top: $marginTop;
    width: 100%;
  }
}

@mixin vertical-divider($dividerClass: 'icon-divider', $verticalMargin: $inner-spacing-mini) {
  .#{$dividerClass} {
    margin-top: $verticalMargin;
    margin-bottom: $verticalMargin;
  }
}

@mixin info-line ($class: 'swap-info') {
  .#{$class} {
    display: flex;
    align-items: center;
    margin-top: $inner-spacing-mini;
    width: 100%;
    padding-right: $inner-spacing-mini;
    padding-left: $inner-spacing-mini;
    color: var(--s-color-base-content-secondary);
    &-container {
      width: 100%;
    }
    > span:first-of-type {
      margin-right: $inner-spacing-small;
      word-break: keep-all;
    }
    &-value {
      margin-left: auto;
      text-align: right;
      word-break: break-all;
    }
    // TODO: Check this part
    .asset-title {
      word-break: keep-all;
      white-space: nowrap;
    }
    .el-tooltip {
      margin-right: $inner-spacing-mini;
      flex-shrink: 0;
    }
    &-icon {
      position: relative;
      height: var(--s-size-mini);
      width: var(--s-size-mini);
      background-color: var(--s-color-base-background);
      border-radius: var(--s-border-radius-small);
      &:hover {
        background-color: var(--s-color-base-background-hover);
        cursor: pointer;
      }
      &:before {
        position: absolute;
        display: block;
        height: var(--s-icon-font-size-mini);
        width: var(--s-icon-font-size-mini);
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        margin: auto;
        font-size: var(--s-icon-font-size-mini);
      }
    }
  }
}

@mixin search-item ($class: 'el-form-item--search') {
  .#{$class} {
    margin-bottom: 0;
    position: relative;
    .s-button--clear {
      width: 32px;
      margin-right: -8px;
      padding: 0;
      background-color: transparent;
      border-radius: 0;
      border: none;
    }
  }
}

@mixin evm-logo-styles {
  .token-logo {
    // filter: grayscale(1);
    // opacity: .5;
  }
}

@mixin bridge-container {
  width: $bridge-width;

  .el-loading-mask {
    border-radius: var(--s-border-radius-medium);
  }
}

@mixin bridge-content {
  min-height: 400px;
  margin-top: $basic-spacing * 2;
  width: 100%;
}

@mixin input-font-styles {
  height: var(--s-size-small);
  font-size: $s-font-size-input;
  line-height: var(--s-line-height-small);
  letter-spacing: var(--s-letter-spacing-small);
}

@mixin svg-icon ($url: '', $width: var(--s-icon-font-size-mini), $height: $width) {
  display: block;
  width: $width;
  height: $height;
  @if $url != '' {
    background-image: url($url);
  }
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
}

@mixin status-icon ($withLoading: false) {
  &-icon {
    align-self: center;
    @include svg-icon;
    &--waiting,
    &--pending {
      @if $withLoading == true {
        @include loading;
      }
      background-image: url("~@/assets/img/status-pending.svg");
      height: var(--s-font-size-mini);
      width: var(--s-font-size-mini);
    }
    &--error {
      background-image: url("~@/assets/img/status-error.svg");
    }
    &--success {
      background-image: url("~@/assets/img/status-success.svg");
    }
  }
}

@mixin loading {
  animation: rotation 2s infinite linear;
  @keyframes rotation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(359deg);
    }
  }
}

// TODO 4 alexnatalia: Check these styles later
@mixin button-styles {
  font-weight: 600 !important;
  text-transform:  uppercase;
  font-size: $s-font-size-button;
  line-height: var(--s-line-height-small);
  letter-spacing: var(--s-letter-spacing-small);
}

@mixin next-button {
  width: 100%;
  letter-spacing: var(--s-letter-spacing-big);
}

@mixin bottom-button {
  padding: 0;
  width: $bridge-width;
  @include button-styles;
  &:active {
    border: 1px solid var(--s-color-theme-accent);
    color: var(--s-color-theme-accent);
  }
}

@mixin empty-search {
  color: var(--s-color-base-content-tertiary);
}

@mixin exchange-tabs {
  $tabs-class: ".el-tabs";

  .el-dialog {
    overflow: hidden;
    &__body {
      padding: $inner-spacing-mini 0 $inner-spacing-big !important;
    }
  }
  .s-tabs.s-tabs--exchange {
    &#{$tabs-class} {
      #{$tabs-class}__header {
        margin-bottom: $inner-spacing-medium;
      }
    }
    #{$tabs-class} {
      &__header {
        margin-left: $inner-spacing-big;
        width: calc(100% - 2 * #{$inner-spacing-big});

        #{$tabs-class}__nav-wrap {
          #{$tabs-class}__item {
            padding-right: $inner-spacing-medium;
            padding-left: $inner-spacing-medium;
            width: 50%;
            font-size: var(--s-font-size-medium);
            font-weight: 400 !important;
            text-align: center;
            &.is-focus:not(.is-active) {
              box-shadow: none !important;
            }
            &.is-disabled {
              &, &:hover, &:focus.is-focus {
                color: var(--s-color-base-content-tertiary);
              }
            }
          }
        }
      }
      &__nav {
        width: 100%;
        &-wrap {
          background-color: var(--s-color-base-background);
        }
      }
      &__content {
        min-height: calc(#{$select-asset-item-height} * 7);
      }
    }
  }
}
