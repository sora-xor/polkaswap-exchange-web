// This file includes mixins for usage in different components

// TODO 4 alexnatalia: Right now this is just a mixin because there are no appropriate focus behaviour for some elements (tabs for example) and we need more time to investigate the problem
@mixin focus {
  &:focus {
    outline: 1px solid var(--s-color-theme-accent-focused) !important;
  }
}

@mixin font-weight($fontWeight: 400, $important: false) {
  @if $fontWeight == 400 and $important == false {
    font-family: "Sora", sans-serif;
  } @else if $fontWeight == 400 and $important == true {
    font-family: "Sora", sans-serif !important;
  } @else if $fontWeight == 500 and $important == false {
    font-family: "SoraSB", sans-serif;
  } @else if $fontWeight == 500 and $important == true {
    font-family: "SoraSB", sans-serif !important;
  } @else if $fontWeight == 600 and $important == false {
    font-family: "SoraB", sans-serif;
  } @else if $fontWeight == 600 and $important == true {
    font-family: "SoraB", sans-serif !important;
  } @else if $fontWeight == 700 and $important == false {
    font-family: "SoraEB", sans-serif;
  } @else if $fontWeight == 700 and $important == true {
    font-family: "SoraEB", sans-serif !important;
  }
}

@mixin token-styles {
  .token {
    display: flex;
    align-items: center;
    &-logo {
      margin-right: $inner-spacing-mini;
    }
    &-balance {
      margin-left: auto;
      &-title {
        color: var(--s-color-base-content-tertiary);
        font-size: var(--s-font-size-mini);
      }
    }
    &-balance-value {
      margin-left: $inner-spacing-mini / 2;
      font-feature-settings: $s-font-feature-settings-common;
      letter-spacing: $s-letter-spacing-big;
      word-break: break-all;
    }
  }
}

@mixin element-size($className: "", $width: 40px, $height: $width) {
  .#{$className} {
    height: $height;
    width: $width;
  }
}

@mixin container-styles {
  margin: $inner-spacing-big auto;
  padding: $inner-spacing-medium $inner-spacing-medium $inner-spacing-big;
  min-height: $inner-window-height;
  width: $inner-window-width;
  background-color: var(--s-color-utility-surface);
  border-radius: var(--s-border-radius-medium);
  box-shadow: var(--s-shadow-surface);
  color: var(--s-color-base-content-primary);
}

@mixin text-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin input-form-styles {
  display: flex;
  flex-direction: column;
  align-items: center;
  .input-container {
    position: relative;
    padding: $inner-spacing-small $inner-spacing-mini $inner-spacing-mini $inner-spacing-medium;
    width: 100%;
    background-color: var(--s-color-base-background);
    border-radius: var(--s-border-radius-mini);
    .input-line {
      display: flex;
      justify-content: space-between;
      align-items: baseline;
      + .input-line {
        align-items: center;
        margin-top: $inner-spacing-small;
      }
    }
    .el-form-item {
      margin-bottom: 0;
      margin-right: $inner-spacing-mini;
      width: 100%;
    }
    .input-title,
    .token-balance {
      display: flex;
    }
    .input-title,
    .token-balance-title {
      margin-top: $inner-spacing-mini / 2;
      margin-bottom: $inner-spacing-mini / 2;
    }
    .token-balance {
      flex-wrap: wrap;
      padding-right: $inner-spacing-mini;
      align-items: center;
      justify-content: flex-end;
      text-align: right;
    }
    .input-title {
      align-items: baseline;
      font-family: "SoraB", sans-serif !important;
      margin-right: $inner-spacing-mini;
    }
    @include token-styles;
  }
  .s-input {
    min-height: 0;
    font-feature-settings: $s-font-feature-settings-input;
  }
}

@mixin buttons($isChooseTokenDisabled: false) {
  .s-tertiary {
    padding: $inner-spacing-mini / 2 $inner-spacing-mini / 2 $inner-spacing-mini / 2 $inner-spacing-mini;
  }
  .el-button {
    &--max,
    &--empty-token,
    &--choose-token {
      font-feature-settings: $s-font-feature-settings-title;
      @include font-weight(700, true);
    }
    &--max,
    &--empty-token {
      margin-left: $inner-spacing-mini / 2;
    }
    &--max {
      margin-right: $inner-spacing-mini / 2;
      padding-right: $inner-spacing-mini;
      height: var(--s-size-mini);
    }
    &--choose-token {
      margin-left: 0;
      padding-left: $inner-spacing-mini / 2;
      background-color: var(--s-color-base-background);
      border-color: var(--s-color-base-background);
      color: var(--s-color-base-content-primary);
      font-size: var(--s-font-size-small);
      @if $isChooseTokenDisabled == true {
        cursor: default;
      } @else {
        &:hover, &:active {
          cursor: pointer;
        }
        &:hover, &:active, &:focus {
          background-color: var(--s-color-base-background-hover);
          border-color: var(--s-color-base-background-hover);
          color: var(--s-color-base-content-primary);
        }
      }
    }
  }
}

@mixin switch-button ($lineHeight: var(--s-size-small)) {
  padding: 0;
  font-size: var(--s-icon-font-size-big);
  line-height: $lineHeight;
}

@mixin switch-button-inherit-styles ($size: 'small') {
  &.s-action.s-#{$size} i {
    font-size: inherit;
    line-height: inherit;
  }
}

@mixin full-width-button($buttonClass: 's-primary', $marginTop: $inner-spacing-medium) {
  .#{$buttonClass} {
    margin-top: $marginTop;
    width: 100%;
    &:not(:disabled) {
      @include font-weight(600, true);
    }
  }
}

@mixin vertical-divider($dividerClass: 'icon-divider', $verticalMargin: $inner-spacing-mini) {
  .#{$dividerClass} {
    margin-top: $verticalMargin;
    margin-bottom: $verticalMargin;
  }
}

@mixin info-line ($class: 'swap-info') {
  .#{$class} {
    display: flex;
    align-items: center;
    margin-top: $inner-spacing-mini;
    width: 100%;
    padding-right: $inner-spacing-mini;
    padding-left: $inner-spacing-mini;
    color: var(--s-color-base-content-secondary);
    &-container {
      width: 100%;
    }
    > span:first-of-type {
      margin-right: $inner-spacing-small;
      word-break: keep-all;
    }
    &-value {
      margin-left: auto;
      text-align: right;
      font-feature-settings: $s-font-feature-settings-common;
      word-break: break-all;
    }
    // TODO: Check this part
    .asset-title {
      word-break: keep-all;
      white-space: nowrap;
    }
    .el-tooltip {
      margin-right: $inner-spacing-mini;
      flex-shrink: 0;
    }
    &-icon {
      position: relative;
      height: var(--s-size-mini);
      width: var(--s-size-mini);
      background-color: var(--s-color-base-background);
      border-radius: var(--s-border-radius-small);
      &:hover {
        background-color: var(--s-color-base-background-hover);
        cursor: pointer;
      }
      &:before {
        position: absolute;
        display: block;
        height: var(--s-icon-font-size-mini);
        width: var(--s-icon-font-size-mini);
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        margin: auto;
        font-size: var(--s-icon-font-size-mini);
      }
    }
  }
}

@mixin search-item ($class: 'el-form-item--search', $clearRightPosition: $inner-spacing-big) {
  $button-clear-font-size: var(--s-icon-font-size-mini);
  .#{$class} {
    margin-bottom: 0;
    position: relative;
    .s-button--clear {
      right: $clearRightPosition;
      position: absolute;
      top: 0;
      padding: 0;
      background-color: transparent;
      border-radius: 0;
      border: none;
    }
  }
}

@mixin search-item-unscoped ($class: 'el-form-item--search') {
  $button-clear-font-size: var(--s-icon-font-size-mini);
  .#{$class} {
    .s-button--clear {
      width: calc(#{$inner-spacing-small * 2} + var(--s-icon-font-size-mini));
      // TODO: Ask hover/active colors
      .s-icon-circle-x {
        margin-right: 0;
        font-size: $button-clear-font-size;
      }
    }
  }
}

@mixin ethereum-logo-styles {
  .token-logo {
    filter: grayscale(1);
    opacity: .5;
  }
}

@mixin bridge-container {
  max-width: $bridge-width;
  width: 100%;
  .el-loading-mask {
    border-radius: var(--s-border-radius-medium);
  }
}

@mixin bridge-content {
  margin-top: $basic-spacing * 2;
  margin-bottom: $basic-spacing * 2;
  border: none;
  &,
  &.is-hover-shadow:hover {
    box-shadow: var(--s-shadow-surface);
  }
}

@mixin input-font-styles {
  height: var(--s-size-small);
  font-size: $s-font-size-input;
  line-height: $s-line-height-small;
  letter-spacing: $s-letter-spacing-small;
}

@mixin svg-icon ($url: '', $width: var(--s-icon-font-size-mini), $height: $width) {
  display: block;
  width: $width;
  height: $height;
  @if $url != '' {
    background-image: url($url);
  }
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
}

@mixin status-icon ($withLoading: false) {
  &-icon {
    align-self: center;
    @include svg-icon;
    &--waiting,
    &--pending {
      @if $withLoading == true {
        @include loading;
      }
      background-image: url("~@/assets/img/status-pending.svg");
      height: var(--s-font-size-mini);
      width: var(--s-font-size-mini);
    }
    &--error {
      background-image: url("~@/assets/img/status-error.svg");
    }
    &--success {
      background-image: url("~@/assets/img/status-success.svg");
    }
  }
}

@mixin loading {
  animation: rotation 2s infinite linear;
  @keyframes rotation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(359deg);
    }
  }
}

// TODO 4 alexnatalia: Check these styles later
@mixin button-styles {
  @include font-weight(600, true);
  font-size: $s-font-size-button;
  line-height: $s-line-height-small;
  letter-spacing: $s-letter-spacing-small;
  font-feature-settings: $s-font-feature-settings-button;
}

@mixin next-button {
  width: 100%;
  // line-height: $s-line-height-medium;
  letter-spacing: $s-letter-spacing-big;
  font-feature-settings: $s-font-feature-settings-title;
}

@mixin bottom-button {
  padding: 0;
  width: $bridge-width;
  @include button-styles;
  &:active {
    border: 1px solid var(--s-color-theme-accent);
    color: var(--s-color-theme-accent);
  }
}

@mixin empty-search {
  color: var(--s-color-base-content-tertiary);
  font-feature-settings: $s-font-feature-settings-common;
  line-height: $s-line-height-big;
}
